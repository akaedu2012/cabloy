{"version":3,"sources":["webpack://egg-born-module-test-dingtalk/./backend/src/bean/event.dingtalkCallback.js","webpack://egg-born-module-test-dingtalk/./backend/src/bean/event.loginInfo.js","webpack://egg-born-module-test-dingtalk/./backend/src/beans.js","webpack://egg-born-module-test-dingtalk/./backend/src/config/config.js","webpack://egg-born-module-test-dingtalk/./backend/src/config/errors.js","webpack://egg-born-module-test-dingtalk/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-test-dingtalk/./backend/src/config/locales.js","webpack://egg-born-module-test-dingtalk/./backend/src/controller/test.js","webpack://egg-born-module-test-dingtalk/./backend/src/controllers.js","webpack://egg-born-module-test-dingtalk/./backend/src/main.js","webpack://egg-born-module-test-dingtalk/./backend/src/meta.js","webpack://egg-born-module-test-dingtalk/./backend/src/models.js","webpack://egg-born-module-test-dingtalk/./backend/src/routes.js","webpack://egg-born-module-test-dingtalk/./backend/src/service/test.js","webpack://egg-born-module-test-dingtalk/./backend/src/services.js","webpack://egg-born-module-test-dingtalk/external \"require3\"","webpack://egg-born-module-test-dingtalk/webpack/bootstrap","webpack://egg-born-module-test-dingtalk/webpack/startup"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,mBAAmB,kGAAkG;AACrH,mBAAmB,0FAA0F;AAC7G,mBAAmB,uFAAuF;AAC1G;AACA,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACpCA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,8BAA8B,mBAAO,CAAC,GAAkC;;AAExE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;;;;;;;;ACFA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;;ACpBA,aAAa,mBAAO,CAAC,GAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;;AAEA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACrBA;;AAEA;;AAEA,uBAAuB,OAAO;AAC9B;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;;AAEA,0BAA0B,gBAAgB;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,kBAAkB,oCAAoC;AACtD,OAAO;AACP;;AAEA;;AAEA;AACA;;;;;;;;AChCA,aAAa,mBAAO,CAAC,GAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA,sC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = ctx => {\n  // const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class eventBean {\n\n    async execute(context, next) {\n      const data = context.data;\n      const message = data.message;\n      console.log('-------dingtalk callback, EventType: ', message.EventType);\n      // next\n      await next();\n    }\n\n  }\n\n  return eventBean;\n};\n","const require3 = require('require3');\nconst extend = require3('extend2');\n\nmodule.exports = ctx => {\n  class eventBean {\n\n    async execute(context, next) {\n      const info = context.data.info;\n      const provider = info.user && info.user.provider;\n      if (provider && provider.module === 'a-dingtalk' && provider.providerName === 'dingtalk') {\n        info.config = extend(true, info.config, {\n          modules: {\n            'a-layoutmobile': {\n              layout: {\n                login: '/a/login/login',\n                loginOnStart: true,\n                toolbar: {\n                  tabbar: true, labels: true, bottomMd: true,\n                },\n                tabs: [\n                  { name: 'Test', tabLinkActive: true, iconMaterial: 'group_work', url: '/test/dingtalk/test/index' },\n                  { name: 'Home', tabLinkActive: false, iconMaterial: 'home', url: '/a/basefront/menu/list' },\n                  { name: 'Mine', tabLinkActive: false, iconMaterial: 'person', url: '/a/user/user/mine' },\n                ],\n              },\n            },\n          },\n        });\n      }\n      // next\n      await next();\n    }\n\n  }\n\n  return eventBean;\n};\n","const eventLoginInfo = require('./bean/event.loginInfo.js');\nconst eventDingtalkCallback = require('./bean/event.dingtalkCallback.js');\n\nmodule.exports = app => {\n  const beans = {\n    'event.loginInfo': {\n      mode: 'ctx',\n      bean: eventLoginInfo,\n    },\n    'event.dingtalkCallback': {\n      mode: 'ctx',\n      bean: eventDingtalkCallback,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n  Reply: '回复',\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  class TestController extends app.Controller {\n\n    async getMemberId() {\n      const res = await this.service.test.getMemberId({\n        user: this.ctx.state.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n    async sendAppMessage() {\n      const res = await this.service.test.sendAppMessage({\n        message: this.ctx.request.body.message,\n        user: this.ctx.state.user.op,\n      });\n      this.ctx.success(res);\n    }\n\n  }\n  return TestController;\n};\n","const test = require('./controller/test.js');\n\nmodule.exports = app => {\n  const controllers = {\n    test,\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","module.exports = app => {\n  // const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n    event: {\n      implementations: {\n        'a-dingtalk:dingtalkCallback': 'dingtalkCallback',\n        'a-base:loginInfo': 'loginInfo',\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","const _sceneAll = 'dingtalk,dingtalkweb,dingtalkadmin,dingtalkmini';\n\nmodule.exports = app => {\n  const routes = [\n    // test\n    { method: 'post', path: 'test/getMemberId', controller: 'test', middlewares: 'inDingtalk',\n      meta: {\n        inDingtalk: {\n          scene: _sceneAll,\n        },\n      },\n    },\n    { method: 'post', path: 'test/sendAppMessage', controller: 'test', middlewares: 'inDingtalk',\n      meta: {\n        inDingtalk: {\n          scene: _sceneAll,\n        },\n      },\n    },\n  ];\n  return routes;\n};\n","module.exports = app => {\n\n  class Test extends app.Service {\n\n    async getMemberId({ user }) {\n      const modelMember = this.ctx.model.module('a-dingtalk').member;\n      const member = await modelMember.get({ userId: user.id });\n      return {\n        memberId: member.memberId,\n      };\n    }\n\n    async sendAppMessage({ message, user }) {\n      const msg = {\n        msgtype: 'text',\n        text: {\n          content: message.text,\n        },\n      };\n      const content = {\n        userIds: [ user.id ],\n        data: { msg },\n      };\n      await this.ctx.bean.io.pushDirect({\n        content,\n        channel: { module: 'a-dingtalk', name: 'app' },\n      });\n    }\n\n  }\n\n  return Test;\n};\n","const test = require('./service/test.js');\n\nmodule.exports = app => {\n  const services = {\n    test,\n  };\n  return services;\n};\n","module.exports = require(\"require3\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(421);\n"],"sourceRoot":""}