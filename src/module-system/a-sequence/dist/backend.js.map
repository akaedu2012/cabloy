{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB,YAAY,WAAW,GAAG,KAAK;AAC5E;AACA;AACA;AACA;AACA;AACA,yBAAyB,MAAM;AAC/B;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,6EAA6E,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,yBAAyB,gBAAgB,GAAG,KAAK;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB,YAAY,SAAS;AAC5E,YAAY;AACZ,8BAA8B,4CAA4C,YAAY,cAAc;AACpG;AACA,6BAA6B,yBAAyB,GAAG,IAAI;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACxBA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,uBAAuB,mBAAO,CAAC,EAA2B;AAC1D,qBAAqB,mBAAO,CAAC,GAAyB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;;;;;;;;ACDA;;;;;;;;ACAA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;;AAEA;AACA;;;;;;;;ACJA,iBAAiB,mBAAO,CAAC,GAA0B;;AAEnD;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;;AAEA;AACA;;;;;;;;ACJA,iBAAiB,mBAAO,CAAC,GAAuB;AAChD;AACA;AACA;;;;;;;UCHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-sequence/./backend/src/bean/bean.sequence.js","webpack://egg-born-module-a-sequence/./backend/src/bean/sequence.simple.js","webpack://egg-born-module-a-sequence/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-sequence/./backend/src/beans.js","webpack://egg-born-module-a-sequence/./backend/src/config/config.js","webpack://egg-born-module-a-sequence/./backend/src/config/errors.js","webpack://egg-born-module-a-sequence/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-sequence/./backend/src/config/locales.js","webpack://egg-born-module-a-sequence/./backend/src/controller/sequence.js","webpack://egg-born-module-a-sequence/./backend/src/controllers.js","webpack://egg-born-module-a-sequence/./backend/src/main.js","webpack://egg-born-module-a-sequence/./backend/src/meta.js","webpack://egg-born-module-a-sequence/./backend/src/routes.js","webpack://egg-born-module-a-sequence/./backend/src/service/sequence.js","webpack://egg-born-module-a-sequence/./backend/src/services.js","webpack://egg-born-module-a-sequence/webpack/bootstrap","webpack://egg-born-module-a-sequence/webpack/before-startup","webpack://egg-born-module-a-sequence/webpack/startup","webpack://egg-born-module-a-sequence/webpack/after-startup"],"sourcesContent":["let __sequences;\n\nmodule.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Sequence extends ctx.app.meta.BeanModuleBase {\n    constructor(moduleName) {\n      super(ctx, 'sequence');\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    async reset(name) {\n      const provider = this._findSequenceProvider(name);\n      const sequence = await this._get(name);\n      await ctx.db.update('aSequence', {\n        id: sequence.id,\n        value: JSON.stringify(provider.start),\n      });\n    }\n\n    async current(name) {\n      const sequence = await this._get(name);\n      if (sequence) return JSON.parse(sequence.value);\n      const provider = this._findSequenceProvider(name);\n      return provider.start;\n    }\n\n    async next(name) {\n      const moduleName = this.moduleName;\n      return await ctx.app.meta.util.lock({\n        subdomain: ctx.subdomain,\n        resource: `${moduleInfo.relativeName}.sequence.${moduleName}.${name}`,\n        fn: async () => {\n          return await ctx.app.meta.util.executeBean({\n            subdomain: ctx.subdomain,\n            beanModule: moduleInfo.relativeName,\n            beanFullName: 'sequence',\n            fn: async ({ bean }) => {\n              return await bean.module(moduleName)._nextLock(name);\n            },\n          });\n        },\n      });\n    }\n\n    async _nextLock(name) {\n      const provider = this._findSequenceProvider(name);\n      const sequence = await this._get(name);\n\n      // current\n      let current;\n      if (sequence) {\n        current = JSON.parse(sequence.value);\n      } else {\n        current = provider.start;\n      }\n\n      // next\n      const value = await ctx.bean._getBean(provider.beanFullName).execute({ value: current });\n\n      // save\n      if (sequence) {\n        await ctx.db.update('aSequence', {\n          id: sequence.id,\n          value: JSON.stringify(value),\n        });\n      } else {\n        // insert\n        await ctx.db.insert('aSequence', {\n          iid: ctx.instance.id,\n          module: this.moduleName,\n          name,\n          value: JSON.stringify(value),\n        });\n      }\n\n      return value;\n    }\n\n    async _get(name) {\n      // get\n      const sequence = await ctx.db.get('aSequence', {\n        iid: ctx.instance.id,\n        module: this.moduleName,\n        name,\n      });\n      return sequence;\n    }\n\n    _findSequenceProvider(name) {\n      const fullKey = `${this.moduleName}:${name}`;\n      if (!__sequences) {\n        __sequences = this._collectSequences();\n      }\n      return __sequences[fullKey];\n    }\n\n    _collectSequences() {\n      const sequences = {};\n      for (const module of ctx.app.meta.modulesArray) {\n        const providers = module.main.meta && module.main.meta.sequence && module.main.meta.sequence.providers;\n        if (!providers) continue;\n        for (const key in providers) {\n          const provider = providers[key];\n          const beanName = provider.bean;\n          let beanFullName;\n          if (typeof beanName === 'string') {\n            beanFullName = `${module.info.relativeName}.sequence.${beanName}`;\n          } else {\n            beanFullName = `${beanName.module || module.info.relativeName}.sequence.${beanName.name}`;\n          }\n          const fullKey = `${module.info.relativeName}:${key}`;\n          sequences[fullKey] = {\n            ...provider,\n            beanFullName,\n          };\n        }\n      }\n      return sequences;\n    }\n  }\n\n  return Sequence;\n};\n","module.exports = ctx => {\n  class Sequence {\n    async execute(context) {\n      let value = context.value;\n      return ++value;\n    }\n  }\n\n  return Sequence;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aSequence\n        const sql = `\n          CREATE TABLE aSequence (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            module varchar(255) DEFAULT NULL,\n            name varchar(255) DEFAULT NULL,\n            value json DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst sequenceSimple = require('./bean/sequence.simple.js');\nconst beanSequence = require('./bean/bean.sequence.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // sequence\n    'sequence.simple': {\n      mode: 'ctx',\n      bean: sequenceSimple,\n    },\n    // global\n    sequence: {\n      mode: 'ctx',\n      bean: beanSequence,\n      global: true,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  class SequenceController extends app.Controller {}\n\n  return SequenceController;\n};\n","const sequence = require('./controller/sequence.js');\n\nmodule.exports = app => {\n  const controllers = {\n    sequence,\n  };\n  return controllers;\n};\n","const services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n  // beans\n  const beans = require('./beans.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  const meta = {};\n  return meta;\n};\n","module.exports = app => {\n  const routes = [];\n  return routes;\n};\n","module.exports = app => {\n  class Sequence extends app.Service {}\n\n  return Sequence;\n};\n","const sequence = require('./service/sequence.js');\nmodule.exports = {\n  sequence,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}