{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;;;;;;;ACtCA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA,mBAAmB,0DAA0D;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9EA;AACA;AACA;AACA,4BAA4B,8DAA8D;AAC1F;AACA,iDAAiD,6CAA6C;AAC9F;AACA;AACA,2CAA2C,8DAA8D;AACzG;;AAEA,iCAAiC,SAAS;AAC1C;AACA;AACA,yCAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AClCA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,sBAAsB,mBAAO,CAAC,GAA2B;AACzD,sBAAsB,mBAAO,CAAC,GAA2B;AACzD,iBAAiB,mBAAO,CAAC,GAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;;AC5BA;AACA;;;;;;;;ACDA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;;;;;;;;ACFA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;;;;;;;;ACHA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA,8BAA8B,mBAAO,CAAC,GAAkC;AACxE,8BAA8B,mBAAO,CAAC,GAAkC;AACxE;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA,oBAAoB;AACpB,kBAAkB;AAClB,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA,mBAAmB,2BAA2B,yBAAyB;AACvE;AACA;AACA;AACA;;;;;;;;ACPA,aAAa,mBAAO,CAAC,EAAiB;;AAEtC;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA,aAAa,mBAAO,CAAC,CAAmB;;AAExC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-mail/./backend/src/bean/bean.mail.js","webpack://egg-born-module-a-mail/./backend/src/bean/io.channel.mail.js","webpack://egg-born-module-a-mail/./backend/src/bean/io.message.mail.js","webpack://egg-born-module-a-mail/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-mail/./backend/src/beans.js","webpack://egg-born-module-a-mail/./backend/src/config/config.js","webpack://egg-born-module-a-mail/./backend/src/config/errors.js","webpack://egg-born-module-a-mail/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-mail/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-mail/./backend/src/config/locales.js","webpack://egg-born-module-a-mail/./backend/src/config/socketio/channelMail.js","webpack://egg-born-module-a-mail/./backend/src/config/socketio/messageMail.js","webpack://egg-born-module-a-mail/./backend/src/controllers.js","webpack://egg-born-module-a-mail/./backend/src/main.js","webpack://egg-born-module-a-mail/./backend/src/meta.js","webpack://egg-born-module-a-mail/./backend/src/model/mail.js","webpack://egg-born-module-a-mail/./backend/src/models.js","webpack://egg-born-module-a-mail/./backend/src/routes.js","webpack://egg-born-module-a-mail/./backend/src/service/mail.js","webpack://egg-born-module-a-mail/./backend/src/services.js","webpack://egg-born-module-a-mail/external commonjs2 \"require3\"","webpack://egg-born-module-a-mail/webpack/bootstrap","webpack://egg-born-module-a-mail/webpack/before-startup","webpack://egg-born-module-a-mail/webpack/startup","webpack://egg-born-module-a-mail/webpack/after-startup"],"sourcesContent":["module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Mail extends ctx.app.meta.BeanModuleBase {\n    constructor(moduleName) {\n      super(ctx, 'mail');\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    get modelMail() {\n      return ctx.model.module(moduleInfo.relativeName).mail;\n    }\n\n    // send\n    async send({ scene, message }) {\n      // save to db\n      const res = await this.modelMail.insert({\n        scene,\n        status: 0,\n        mailto: message.to,\n        mailSubject: message.subject,\n        message: JSON.stringify(message),\n      });\n      const mailId = res.insertId;\n      // publish\n      ctx.tail(async () => {\n        await ctx.bean.io.publish({\n          message: {\n            content: { mailId },\n          },\n          messageClass: {\n            module: moduleInfo.relativeName,\n            messageClassName: 'mail',\n          },\n        });\n      });\n    }\n  }\n  return Mail;\n};\n","const require3 = require('require3');\nconst nodemailer = require3('nodemailer');\nconst chalk = require3('chalk');\nconst boxen = require3('boxen');\n\nconst boxenOptions = { padding: 1, margin: 1, align: 'center', borderColor: 'yellow', borderStyle: 'round' };\n\nmodule.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class IOChannel extends ctx.app.meta.IOChannelBase(ctx) {\n    async onPush({ content /* options, message, messageSync, messageClass*/ }) {\n      // check if content.message\n      // not set content.message.to dynamic for test, which must be set by business\n      if (!content.message || !content.message.to) return false;\n      // scene\n      let scene;\n      let sceneTest = false;\n      // 1. maybe object by dynamic\n      if (content.scene && typeof content.scene === 'object') {\n        scene = content.scene;\n      } else {\n        // 2. from config\n        scene = ctx.config.module(moduleInfo.relativeName).scenes[content.scene || 'system'];\n      }\n      // 3. test\n      if (!this._sceneValid(scene) && (ctx.app.meta.isTest || ctx.app.meta.isLocal)) {\n        scene = await this._createSceneTest();\n        sceneTest = true;\n      }\n      // check if empty\n      if (!this._sceneValid(scene)) {\n        const message = chalk.keyword('orange')(ctx.text('mailhostNotConfigAlert'));\n        console.log('\\n' + boxen(message, boxenOptions));\n        return false;\n      }\n      // transporter\n      const transporter = nodemailer.createTransport(scene.transport, scene.defaults);\n      // send\n      const res = await transporter.sendMail(content.message);\n      // log\n      if (sceneTest) {\n        const url = nodemailer.getTestMessageUrl(res);\n        const message =\n          chalk.keyword('cyan')('Test Mail To: ') +\n          chalk.keyword('yellow')(content.message.to) +\n          chalk.keyword('orange')('\\n' + url);\n        console.log('\\n' + boxen(message, boxenOptions));\n      }\n      // done\n      return true;\n    }\n\n    async _createSceneTest() {\n      const account = await nodemailer.createTestAccount();\n      return {\n        transport: {\n          host: account.smtp.host,\n          port: account.smtp.port,\n          secure: account.smtp.secure,\n          auth: {\n            user: account.user,\n            pass: account.pass,\n          },\n          logger: false,\n          debug: false,\n        },\n        defaults: {\n          // sender info\n          from: 'Nodemailer <example@nodemailer.com>',\n        },\n      };\n    }\n\n    _sceneValid(scene) {\n      return scene && scene.transport && scene.transport.host;\n    }\n  }\n  return IOChannel;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class IOMessage extends ctx.app.meta.IOMessageBase(ctx) {\n    async onChannelRender({ channelFullName, options, message, messageSync, messageClass }) {\n      if (channelFullName === 'a-mail:mail') {\n        return await this._onChannelRenderMail({ options, message, messageSync, messageClass });\n      }\n      // super\n      return await super.onChannelRender({ channelFullName, options, message, messageSync, messageClass });\n    }\n\n    async _onChannelRenderMail({ message }) {\n      const content = JSON.parse(message.content);\n      const modelMail = ctx.model.module(moduleInfo.relativeName).mail;\n      const mail = await modelMail.get({ id: content.mailId });\n      return {\n        scene: mail.scene,\n        message: JSON.parse(mail.message),\n      };\n    }\n  }\n  return IOMessage;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aMail\n        const sql = `\n          CREATE TABLE aMail (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            scene varchar(50) DEFAULT NULL,\n            status int(11) DEFAULT '0',\n            mailTo text DEFAULT NULL,\n            mailSubject text DEFAULT NULL,\n            message LONGTEXT DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n    async init(options) {\n      if (options.version === 1) {\n        // empty\n      }\n    }\n\n    async test() {}\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst ioMessageMail = require('./bean/io.message.mail.js');\nconst ioChannelMail = require('./bean/io.channel.mail.js');\nconst beanMail = require('./bean/bean.mail.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // io\n    'io.message.mail': {\n      mode: 'ctx',\n      bean: ioMessageMail,\n    },\n    'io.channel.mail': {\n      mode: 'ctx',\n      bean: ioChannelMail,\n    },\n    // global\n    mail: {\n      mode: 'ctx',\n      bean: beanMail,\n      global: true,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // middlewares\n  config.middlewares = {};\n\n  // scenes\n  config.scenes = {\n    system: {\n      transport: {\n        host: '',\n        port: 0,\n        secure: false,\n        auth: {\n          user: '',\n          pass: '',\n        },\n        logger: false,\n        debug: false,\n      },\n      defaults: {\n        from: '',\n      },\n    },\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {\n  mailhostNotConfigAlert: 'Please set module config: [a-mail].scenes.system',\n};\n","module.exports = {\n  mailhostNotConfigAlert: '请设置模块配置: [a-mail].scenes.system',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const ChannelMail = {\n    info: {\n      bean: 'mail',\n      title: 'Mail',\n    },\n  };\n  return ChannelMail;\n};\n","module.exports = app => {\n  const MessageMail = {\n    info: {\n      bean: 'mail',\n      title: 'Mail',\n      persistence: false,\n      push: {\n        channels: ['a-mail:mail'],\n      },\n    },\n  };\n  return MessageMail;\n};\n","module.exports = app => {\n  const controllers = {};\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  // const schemas = require('./config/validation/schemas.js')(app);\n  // socketio\n  const socketioMessageMail = require('./config/socketio/messageMail.js')(app);\n  const socketioChannelMail = require('./config/socketio/channelMail.js')(app);\n  const meta = {\n    base: {\n      atoms: {},\n    },\n    validation: {\n      validators: {},\n      keywords: {},\n      schemas: {},\n    },\n    socketio: {\n      messages: {\n        mail: socketioMessageMail,\n      },\n      channels: {\n        mail: socketioChannelMail,\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  class Mail extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aMail', options: { disableDeleted: false } });\n    }\n  }\n  return Mail;\n};\n","const mail = require('./model/mail.js');\n\nmodule.exports = app => {\n  const models = {\n    mail,\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [];\n  return routes;\n};\n","module.exports = app => {\n  class Mail extends app.Service {}\n  return Mail;\n};\n","const mail = require('./service/mail.js');\n\nmodule.exports = app => {\n  const services = {\n    mail,\n  };\n  return services;\n};\n","module.exports = require(\"require3\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}