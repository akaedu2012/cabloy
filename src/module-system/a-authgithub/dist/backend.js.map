{"version":3,"sources":["webpack://egg-born-module-a-authgithub/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-authgithub/./backend/src/beans.js","webpack://egg-born-module-a-authgithub/./backend/src/config/config.js","webpack://egg-born-module-a-authgithub/./backend/src/config/errors.js","webpack://egg-born-module-a-authgithub/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-authgithub/./backend/src/config/locales.js","webpack://egg-born-module-a-authgithub/./backend/src/controllers.js","webpack://egg-born-module-a-authgithub/./backend/src/main.js","webpack://egg-born-module-a-authgithub/./backend/src/meta.js","webpack://egg-born-module-a-authgithub/./backend/src/models.js","webpack://egg-born-module-a-authgithub/./backend/src/passport/auth.js","webpack://egg-born-module-a-authgithub/./backend/src/routes.js","webpack://egg-born-module-a-authgithub/./backend/src/services.js","webpack://egg-born-module-a-authgithub/external \"require3\"","webpack://egg-born-module-a-authgithub/webpack/bootstrap","webpack://egg-born-module-a-authgithub/webpack/startup"],"names":[],"mappings":";;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACfA,uBAAuB,mBAAO,CAAC,GAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;;ACnBA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;;;;;;;;ACFA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;;;;;;ACLA,eAAe,mBAAO,CAAC,GAAa;AACpC,iBAAiB,mBAAO,CAAC,GAAe;AACxC,eAAe,mBAAO,CAAC,GAAa;AACpC,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;AAC3C,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,GAAoB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;;;;;;;;ACDA,iBAAiB,mBAAO,CAAC,GAAU;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,kBAAkB;AAClB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;;;;;;;ACvDA;AACA;;;;;;;;ACDA;AACA;;;;;;;;;ACDA,sC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = app => {\n  class Version extends app.meta.BeanBase {\n\n    async update(options) {\n      // eslint-disable-next-line\n      if (options.version === 1) {}\n    }\n\n    async init(options) {\n      if (options.version === 1) {}\n    }\n\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {\n  };\n\n  // account\n  config.account = {};\n\n  // account.github\n  config.account.github = {\n    apps: {\n      default: {\n        clientID: '',\n        clientSecret: '',\n      },\n    },\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n  'Auth-GitHub': '认证-GitHub',\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","\nmodule.exports = app => {\n  const controllers = {\n  };\n  return controllers;\n};\n","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst models = require('./models.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst metaFn = require('./meta.js');\n\nmodule.exports = app => {\n  // beans\n  const beans = require('./beans.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta: metaFn(app),\n  };\n};\n","const authFn = require('./passport/auth.js');\nmodule.exports = app => {\n  return {\n    auth: authFn,\n  };\n};\n","module.exports = {\n};\n","const require3 = require('require3');\nconst strategy = require3('passport-github').Strategy;\nmodule.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n\n  function _createProvider() {\n    const config = ctx.config.module(moduleInfo.relativeName).account.github.apps.default;\n    if (!config.clientID || !config.clientSecret) return null;\n    return {\n      meta: {\n        title: 'GitHub',\n        mode: 'redirect',\n        component: 'buttongithub',\n      },\n      config: {\n      },\n      configFunctions: {\n        getConfig(ctx) {\n          const config = ctx.config.module(moduleInfo.relativeName).account.github.apps.default;\n          return { clientID: config.clientID, clientSecret: config.clientSecret };\n        },\n      },\n      handler: app => {\n        return {\n          strategy,\n          callback: (req, accessToken, refreshToken, params, profile, done) => {\n            const user = {\n              module: moduleInfo.relativeName,\n              provider: 'authgithub',\n              profileId: profile.id,\n              profile: {\n                userName: profile.username,\n                realName: profile.displayName,\n                avatar: profile.photos && profile.photos[0] && profile.photos[0].value,\n                accessToken,\n                refreshToken,\n                params,\n                profile,\n              },\n            };\n            app.passport.doVerify(req, user, done);\n          },\n        };\n      },\n    };\n  }\n\n  const metaAuth = {\n    providers: {\n      authgithub: _createProvider(),\n    },\n  };\n\n  // ok\n  return metaAuth;\n};\n","module.exports = [\n];\n","module.exports = {\n};\n","module.exports = require(\"require3\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(421);\n"],"sourceRoot":""}