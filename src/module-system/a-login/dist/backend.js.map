{"version":3,"sources":["webpack://egg-born-module-a-login/./backend/src/config/config.js","webpack://egg-born-module-a-login/./backend/src/config/errors.js","webpack://egg-born-module-a-login/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-login/./backend/src/config/locales.js","webpack://egg-born-module-a-login/./backend/src/controller/auth.js","webpack://egg-born-module-a-login/./backend/src/controllers.js","webpack://egg-born-module-a-login/./backend/src/main.js","webpack://egg-born-module-a-login/./backend/src/routes.js","webpack://egg-born-module-a-login/./backend/src/service/auth.js","webpack://egg-born-module-a-login/./backend/src/services.js","webpack://egg-born-module-a-login/webpack/bootstrap","webpack://egg-born-module-a-login/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;ACtBA;AACA;;;;;;;;ACDA;;;;;;;;ACAA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA,aAAa,mBAAO,CAAC,GAAsB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,GAAa;AACpC,iBAAiB,mBAAO,CAAC,GAAe;AACxC,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA,GAAG,wDAAwD;AAC3D;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY,GAAG,kBAAkB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY,GAAG,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC5CA,aAAa,mBAAO,CAAC,GAAmB;;AAExC;AACA;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // providers\n  config.providers = [\n    {\n      module: 'a-authsimple',\n      provider: 'authsimple',\n    },\n    {\n      module: 'a-authsms',\n      provider: 'authsms',\n    },\n    {\n      // disable: true,\n      module: 'a-authgithub',\n      provider: 'authgithub',\n    },\n  ];\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  class AuthController extends app.Controller {\n    async list() {\n      const res = await this.service.auth.list();\n      this.ctx.success(res);\n    }\n  }\n  return AuthController;\n};\n","const auth = require('./controller/auth.js');\n\nmodule.exports = app => {\n  const controllers = {\n    auth,\n  };\n  return controllers;\n};\n","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\n// eslint-disable-next-line\nmodule.exports = (app, module) => {\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  return {\n    routes,\n    controllers,\n    services,\n    config,\n    locales,\n    errors,\n  };\n};\n","module.exports = [\n  // auth\n  { method: 'post', path: 'auth/list', controller: 'auth' },\n];\n","module.exports = app => {\n  class Auth extends app.Service {\n    async list() {\n      // list\n      const list = await this.ctx.model.query(\n        `\n        select a.id, a.module,a.providerName from aAuthProvider a\n          where a.iid=? and a.disabled=0\n        `,\n        [this.ctx.instance.id]\n      );\n      // list map\n      const listMap = {};\n      // meta\n      const authProviders = this.ctx.bean.base.authProviders();\n      for (const item of list) {\n        const key = `${item.module}:${item.providerName}`;\n        const authProvider = authProviders[key];\n        if (!authProvider) continue;\n        item.meta = authProvider.meta;\n        listMap[key] = item;\n      }\n      // order\n      const res = [];\n      for (const item of this.ctx.config.providers) {\n        const key = `${item.module}:${item.provider}`;\n        const provider = listMap[key];\n        if (provider) {\n          if (item.disable !== true) {\n            res.push(provider);\n          }\n          delete listMap[key];\n        }\n      }\n      // the rest\n      for (const key in listMap) {\n        res.push(listMap[key]);\n      }\n      // ok\n      return res;\n    }\n  }\n\n  return Auth;\n};\n","const auth = require('./service/auth.js');\n\nmodule.exports = {\n  auth,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}