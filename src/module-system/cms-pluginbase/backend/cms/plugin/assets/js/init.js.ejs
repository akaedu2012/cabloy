$(document).ready(function() {
  // echo
  util.echo();
  // img delay
  $.each($('.img-delay'), (index, item) => {
    const $item = $(item);
    const src = $item.data('src');
    const width = $item.data('width');
    const height = $item.data('height');
    $item.attr('src', util.combineImageUrl(src, width, height));
    $(item).removeClass('img-delay');
  });
});

$(document).on('echo-ready', function() {
  if (util.user.op.anonymous) return;
  // hotload file
  let atomId;
  let file;
  let hotloadFile;
  if (env.article) {
    if (env.article.userIdUpdated === util.user.op.id) {
      atomId = env.article.atomId;
      hotloadFile = `atom/${env.article.userIdUpdated}/${atomId}`;
    }
  } else {
    file = env.site.hotloadFile;
    hotloadFile = file;
  }
  if (!hotloadFile) return;
  // subcribe
  let __hotloadFileTime = 0;
  window.setTimeout(() => {
    const subscribePath = `/a/cms/hotloadFile/${hotloadFile}`;
    util.io.subscribe(subscribePath, () => {
      location.reload(true);
    }, () => {
      util.performAction({
        method: 'post',
        url: '/a/cms/site/checkFile',
        body: {
          atomId,
          file,
          mtime: __hotloadFileTime,
        },
      }).then(data => {
        if (!__hotloadFileTime) {
          if (data && data.mtime) {
            __hotloadFileTime = data.mtime;
          }
        } else {
          if (data && data.mtime !== __hotloadFileTime) {
            location.reload(true);
          }
        }
      });
    });
  }, 0);
});
