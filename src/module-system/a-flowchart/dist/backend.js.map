{"version":3,"sources":["webpack://egg-born-module-a-flowchart/./backend/src/config/config.js","webpack://egg-born-module-a-flowchart/./backend/src/config/errors.js","webpack://egg-born-module-a-flowchart/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-flowchart/./backend/src/config/locales.js","webpack://egg-born-module-a-flowchart/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-flowchart/./backend/src/controller/flow.js","webpack://egg-born-module-a-flowchart/./backend/src/controller/flowDef.js","webpack://egg-born-module-a-flowchart/./backend/src/controllers.js","webpack://egg-born-module-a-flowchart/./backend/src/main.js","webpack://egg-born-module-a-flowchart/./backend/src/meta.js","webpack://egg-born-module-a-flowchart/./backend/src/models.js","webpack://egg-born-module-a-flowchart/./backend/src/routes.js","webpack://egg-born-module-a-flowchart/./backend/src/service/flow.js","webpack://egg-born-module-a-flowchart/./backend/src/service/flowDef.js","webpack://egg-born-module-a-flowchart/./backend/src/services.js","webpack://egg-born-module-a-flowchart/webpack/bootstrap","webpack://egg-born-module-a-flowchart/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;;;;;;;;ACFA;AACA;;;;;;;;ACDA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;AACA;AACA;;;;;;;;ACHA;;AAEA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;;ACfA;;AAEA;;AAEA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;;;;;;;ACnCA,aAAa,mBAAO,CAAC,GAAsB;AAC3C,gBAAgB,mBAAO,CAAC,GAAyB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA,KAAK,oEAAoE;AACzE;AACA,KAAK,4EAA4E;AACjF,KAAK,sEAAsE;AAC3E,KAAK,oEAAoE;AACzE;AACA;AACA;;;;;;;;ACVA;;AAEA;;AAEA,4BAA4B,aAAa;AACzC;AACA,wEAAwE,aAAa;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,wCAAwC,aAAa;AACrD,aAAa,SAAS;AACtB;AACA,+CAA+C,8BAA8B;AAC7E;AACA;AACA,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACrDA;;AAEA;;AAEA,8BAA8B,wBAAwB;AACtD;AACA,6DAA6D,wBAAwB;AACrF;AACA;AACA;AACA;;AAEA,wBAAwB,qBAAqB;AAC7C;AACA,uDAAuD,aAAa;AACpE;AACA;AACA,aAAa,eAAe;AAC5B,gDAAgD,eAAe;AAC/D;;AAEA,sBAAsB,qBAAqB;AAC3C;AACA,uDAAuD,aAAa;AACpE;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB,yBAAyB,EAAE;AAC1D,eAAe,gBAAgB,yBAAyB,EAAE;AAC1D,eAAe,cAAc,yBAAyB,EAAE;AACxD;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA,6BAA6B,aAAa;AAC1C,aAAa,YAAY;AACzB;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,4BAA4B,aAAa;AACzC,aAAa,YAAY;AACzB;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,OAAO;AACP;;AAEA,0CAA0C,wBAAwB;AAClE,aAAa,uBAAuB;AACpC;AACA,uDAAuD,aAAa;AACpE;AACA;AACA,qDAAqD,aAAa;AAClE;AACA;AACA;AACA,2DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACzFA,aAAa,mBAAO,CAAC,GAAmB;AACxC,gBAAgB,mBAAO,CAAC,GAAsB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCTA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const schemas = {};\n  return schemas;\n};\n","module.exports = app => {\n\n  class FlowDefController extends app.Controller {\n\n    async flowChartProcess() {\n      const { host } = this.ctx.request.body;\n      const user = this.ctx.state.user.op;\n      const res = await this.ctx.service.flow.flowChartProcess({\n        host, user,\n      });\n      this.ctx.success(res);\n    }\n\n  }\n  return FlowDefController;\n};\n","module.exports = app => {\n\n  class FlowDefController extends app.Controller {\n\n    async normalizeAssignees() {\n      const { host, assignees } = this.ctx.request.body;\n      const user = this.ctx.state.user.op;\n      const res = await this.ctx.service.flowDef.normalizeAssignees({\n        host, assignees, user,\n      });\n      this.ctx.success(res);\n    }\n\n    async roleChildren() {\n      const { host, params } = this.ctx.request.body;\n      const user = this.ctx.state.user.op;\n      const page = params.page;\n      const items = await this.ctx.service.flowDef.roleChildren({\n        host, params, user,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n    async userSelect() {\n      const { host, params } = this.ctx.request.body;\n      const user = this.ctx.state.user.op;\n      const page = params.page;\n      const items = await this.ctx.service.flowDef.userSelect({\n        host, params, user,\n      });\n      this.ctx.successMore(items, page.index, page.size);\n    }\n\n  }\n  return FlowDefController;\n};\n","const flow = require('./controller/flow.js');\nconst flowDef = require('./controller/flowDef.js');\n\nmodule.exports = app => {\n  const controllers = {\n    flow,\n    flowDef,\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n    // flow\n    { method: 'post', path: 'flow/flowChartProcess', controller: 'flow' },\n    // flowDef\n    { method: 'post', path: 'flowDef/normalizeAssignees', controller: 'flowDef' },\n    { method: 'post', path: 'flowDef/roleChildren', controller: 'flowDef' },\n    { method: 'post', path: 'flowDef/userSelect', controller: 'flowDef' },\n  ];\n  return routes;\n};\n","module.exports = app => {\n\n  class Flow extends app.Service {\n\n    async flowChartProcess({ host, user }) {\n      // check right\n      const flowChartProcess = await this.__checkRightFlowChartProcess({ host, user });\n      if (!flowChartProcess) this.ctx.throw(403);\n      // filter options / locale\n      if (flowChartProcess.nodes) {\n        flowChartProcess.nodes = flowChartProcess.nodes.map(node => {\n          return {\n            ... node,\n            options: undefined,\n            nameLocale: this.ctx.text(node.name),\n          };\n        });\n      }\n      if (flowChartProcess.edges) {\n        flowChartProcess.edges = flowChartProcess.edges.map(edge => {\n          return {\n            ... edge,\n            options: undefined,\n          };\n        });\n      }\n      // ok\n      return flowChartProcess;\n    }\n\n    async __checkRightFlowChartProcess({ host, user }) {\n      const { flowId } = host;\n      // check right\n      let flow = await this.ctx.bean.flow.get({ flowId, history: true, user });\n      if (!flow) return null;\n      // get flow\n      flow = await this.ctx.bean.flow.modelFlowHistory.get({ flowId });\n      if (!flow) return null;\n      // flowDef\n      const flowDef = await this.ctx.bean.flowDef.getByKeyAndRevision({\n        flowDefKey: flow.flowDefKey,\n        flowDefRevision: flow.flowDefRevision,\n      });\n      if (!flowDef) return null;\n      // content\n      const content = flowDef.content ? JSON.parse(flowDef.content) : null;\n      if (!content) return null;\n      // ok\n      return content.process;\n    }\n\n  }\n  return Flow;\n};\n\n","module.exports = app => {\n\n  class FlowDef extends app.Service {\n\n    async normalizeAssignees({ host, assignees, user }) {\n      // check right\n      assignees = await this.__checkRightNormalizeAssignees({ host, assignees, user });\n      if (!assignees) this.ctx.throw(403);\n      //  normalize\n      return await this.ctx.bean.flow.normalizeAssignees(assignees);\n    }\n\n    async roleChildren({ host, params, user }) {\n      // check write right\n      const rightWrite = await this.__checkRightWrite({ host, user });\n      if (!rightWrite) this.ctx.throw(403);\n      // roles\n      const { roleId, page } = params;\n      return await this.ctx.bean.role.children({ roleId, page });\n    }\n\n    async userSelect({ host, params, user }) {\n      // check write right\n      const rightWrite = await this.__checkRightWrite({ host, user });\n      if (!rightWrite) this.ctx.throw(403);\n      // users\n      const { query, page } = params;\n      return await this.ctx.bean.user.select({\n        options: {\n          where: {\n            'a.anonymous': 0,\n            'a.disabled': 0,\n            __or__: [\n              { 'a.userName': { op: 'like', val: query } },\n              { 'a.realName': { op: 'like', val: query } },\n              { 'a.mobile': { op: 'like', val: query } },\n            ],\n          },\n          orders: [[ 'a.userName', 'asc' ]],\n          page,\n          removePrivacy: true,\n        },\n      });\n    }\n\n    async __checkRightWrite({ host, user }) {\n      const { flowDefId } = host;\n      return await this.ctx.bean.atom.checkRightAction({\n        atom: { id: flowDefId },\n        action: 3,\n        stage: 'draft',\n        user,\n        checkFlow: true,\n      });\n    }\n\n    async __checkRightRead({ host, user }) {\n      const { flowDefId } = host;\n      return await this.ctx.bean.atom.checkRightRead({\n        atom: { id: flowDefId },\n        user,\n        checkFlow: true,\n      });\n    }\n\n    async __checkRightNormalizeAssignees({ host, assignees, user }) {\n      const { flowDefId, nodeDefId } = host;\n      // check write right\n      const rightWrite = await this.__checkRightWrite({ host, user });\n      if (rightWrite) return assignees;\n      // check read right\n      const rightRead = await this.__checkRightRead({ host, user });\n      // no right\n      if (!rightRead) return null;\n      // get assignees from flowDef\n      const flowDef = await this.ctx.bean.flowDef.getById({ flowDefId });\n      if (!flowDef) return null;\n      // content\n      const content = flowDef.content ? JSON.parse(flowDef.content) : null;\n      if (!content) return null;\n      // find\n      const node = content.process.nodes.find(item => item.id === nodeDefId);\n      if (!node) return null;\n      // ok\n      return node.options.task ? node.options.task.assignees : node.options.assignees;\n    }\n\n  }\n  return FlowDef;\n};\n\n","const flow = require('./service/flow.js');\nconst flowDef = require('./service/flowDef.js');\n\nmodule.exports = app => {\n  const services = {\n    flow,\n    flowDef,\n  };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}