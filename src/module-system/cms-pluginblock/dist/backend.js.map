{"version":3,"sources":["webpack://egg-born-module-cms-pluginblock/./backend/src/config/block/audio.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/block/iframe.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/blocks.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/config.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/errors.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/locales.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/static/resources.js","webpack://egg-born-module-cms-pluginblock/./backend/src/config/validation/schemas.js","webpack://egg-born-module-cms-pluginblock/./backend/src/controllers.js","webpack://egg-born-module-cms-pluginblock/./backend/src/main.js","webpack://egg-born-module-cms-pluginblock/./backend/src/meta.js","webpack://egg-born-module-cms-pluginblock/./backend/src/models.js","webpack://egg-born-module-cms-pluginblock/./backend/src/routes.js","webpack://egg-born-module-cms-pluginblock/./backend/src/services.js","webpack://egg-born-module-cms-pluginblock/webpack/bootstrap","webpack://egg-born-module-cms-pluginblock/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,mBAAmB;AACxC;AACA,QAAQ;AACR,YAAY,4CAA4C;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,4CAA4C;AACxD;AACA;AACA;AACA,6DAA6D,OAAO,SAAS,QAAQ,6EAA6E,IAAI;AACtK,KAAK;AACL;AACA;AACA;;;;;;;;ACfA;AACA,qBAAqB,mBAAO,CAAC,GAAkB;AAC/C,sBAAsB,mBAAO,CAAC,GAAmB;AACjD;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;ACTA;AACA;AACA;;;;;;;;ACFA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACjDA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;;;;;;;;ACLA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;;AAEA;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D,iBAAiB,mBAAO,CAAC,GAAoB;AAC7C,0BAA0B,mBAAO,CAAC,GAA8B;AAChE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB;AAClB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;;;;;UCLA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCrBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const block = {\n    validator: {\n      module: moduleInfo.relativeName,\n      validator: 'blockAudio',\n    },\n    // async output({ ctx, block, data }) {\n    //   return data;\n    // },\n    render({ md, options, block, token, index, content }) {\n      content = content || {};\n      content.audio = content.audio || {};\n      const content2 = {\n        audio: {\n          name: md.utils.escapeHtml(content.audio.name),\n          url: md.utils.escapeHtml(content.audio.url),\n          artist: md.utils.escapeHtml(content.audio.artist),\n          cover: md.utils.escapeHtml(content.audio.cover),\n        },\n        autoplay: !!content.autoplay,\n        loop: content.loop ? 'all' : 'none',\n      };\n      // element\n      return `<div class=\"block block-audio block-audio-aplayer\">\n    <script type=\"text/template\" class=\"template\">\n    ${JSON.stringify(content2, null, 2)}\n    </script>\n    <div class=\"aplayer\"></div></div>\n    `;\n    },\n  };\n  return block;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const block = {\n    validator: {\n      module: moduleInfo.relativeName,\n      validator: 'blockIFrame',\n    },\n    render({ md, options, block, token, index, content }) {\n      const url = md.utils.escapeHtml(content.url);\n      const width = md.utils.escapeHtml(content.width || '100%');\n      const height = md.utils.escapeHtml(content.height || '300px');\n      return `<div class=\"block block-iframe\" style=\"width:${width};height:${height};\"><iframe width=\"100%\" height=\"100%\" scrolling=\"auto\" frameborder=\"0\" src=\"${url}\"></iframe></div>\\n`;\n    },\n  };\n  return block;\n};\n","module.exports = app => {\n  const blockAudio = require('./block/audio.js')(app);\n  const blockIFrame = require('./block/iframe.js')(app);\n  return {\n    blockAudio,\n    blockIFrame,\n  };\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // plugin\n  config.plugin = {\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n  'Load Error, Try Again': '加载失败，请重试',\n  'Embed Page': '内嵌页面',\n  Audio: '音频',\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const resources = [\n    // cms block\n    {\n      atomName: 'Audio',\n      atomStaticKey: 'blockAudio',\n      atomRevision: 0,\n      atomCategoryId: 'a-cms:block.General',\n      resourceType: 'a-cms:block',\n      resourceConfig: JSON.stringify({\n        default: {\n          audio: {\n            name: '',\n            url: '',\n            artist: '',\n            cover: '',\n          },\n          autoplay: false,\n          loop: true,\n        },\n        validator: {\n          module: moduleInfo.relativeName,\n          validator: 'blockAudio',\n        },\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Embed Page',\n      atomStaticKey: 'blockIFrame',\n      atomRevision: 0,\n      atomCategoryId: 'a-cms:block.General',\n      resourceType: 'a-cms:block',\n      resourceConfig: JSON.stringify({\n        default: {\n          url: '',\n          width: '',\n          height: '',\n        },\n        validator: {\n          module: moduleInfo.relativeName,\n          validator: 'blockIFrame',\n        },\n      }),\n      resourceRoles: 'root',\n    },\n  ];\n  return resources;\n};\n","module.exports = app => {\n  const schemas = { };\n  // block iframe\n  schemas.blockIFrame = {\n    type: 'object',\n    properties: {\n      url: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'URL',\n        format: 'uri',\n        notEmpty: true,\n      },\n      width: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Width',\n      },\n      height: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Height',\n      },\n    },\n  };\n  // block audio\n  schemas.blockAudio = {\n    type: 'object',\n    properties: {\n      // audio\n      audio: {\n        type: 'object',\n        ebType: 'group',\n        ebTitle: 'Audio',\n        properties: {\n          name: {\n            type: 'string',\n            ebType: 'text',\n            ebTitle: 'Name',\n            notEmpty: true,\n          },\n          url: {\n            type: 'string',\n            ebType: 'file',\n            ebTitle: 'URL',\n            ebParams: { mode: 3 },\n            format: 'uri',\n            notEmpty: true,\n          },\n          artist: {\n            type: 'string',\n            ebType: 'text',\n            ebTitle: 'Artist',\n          },\n          cover: {\n            type: 'string',\n            ebType: 'file',\n            ebTitle: 'AudioCover',\n            ebParams: { mode: 1 },\n          },\n        },\n      },\n      // options\n      __groupOptions: {\n        ebType: 'group-flatten',\n        ebTitle: 'Options',\n      },\n      autoplay: {\n        type: 'boolean',\n        ebType: 'toggle',\n        ebTitle: 'Auto Play',\n      },\n      loop: {\n        type: 'boolean',\n        ebType: 'toggle',\n        ebTitle: 'Loop',\n      },\n    },\n  };\n\n  return schemas;\n};\n","\nmodule.exports = app => {\n  const controllers = {\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\nmodule.exports = app => {\n\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const blocks = require('./config/blocks.js')(app);\n  const staticResources = require('./config/static/resources.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n      statics: {\n        'a-base.resource': {\n          items: staticResources,\n        },\n      },\n    },\n    validation: {\n      validators: {\n        blockIFrame: {\n          schemas: 'blockIFrame',\n        },\n        blockAudio: {\n          schemas: 'blockAudio',\n        },\n      },\n      keywords: {},\n      schemas: {\n        blockIFrame: schemas.blockIFrame,\n        blockAudio: schemas.blockAudio,\n      },\n    },\n    cms: {\n      plugin: {\n        blocks,\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n  ];\n  return routes;\n};\n","\nmodule.exports = app => {\n  const services = {\n  };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}