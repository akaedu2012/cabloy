{"version":3,"sources":["webpack://egg-born-module-a-layoutpc/./backend/src/bean/atom.layout.js","webpack://egg-born-module-a-layoutpc/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-layoutpc/./backend/src/beans.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/config.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/errors.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/locales.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/static/layout/layoutPC.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/static/layouts.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/static/resources.js","webpack://egg-born-module-a-layoutpc/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-layoutpc/./backend/src/controllers.js","webpack://egg-born-module-a-layoutpc/./backend/src/main.js","webpack://egg-born-module-a-layoutpc/./backend/src/meta.js","webpack://egg-born-module-a-layoutpc/./backend/src/model/layout.js","webpack://egg-born-module-a-layoutpc/./backend/src/model/layoutContent.js","webpack://egg-born-module-a-layoutpc/./backend/src/model/layoutFull.js","webpack://egg-born-module-a-layoutpc/./backend/src/models.js","webpack://egg-born-module-a-layoutpc/./backend/src/routes.js","webpack://egg-born-module-a-layoutpc/./backend/src/services.js","webpack://egg-born-module-a-layoutpc/webpack/bootstrap","webpack://egg-born-module-a-layoutpc/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;;AAEA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,cAAc;AACd;;AAEA,gBAAgB,gCAAgC;AAChD;AACA,qCAAqC,gCAAgC;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,kCAAkC;AACpD;AACA,0BAA0B,kCAAkC;AAC5D;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,8CAA8C;AAC/D;AACA,yBAAyB,8CAA8C;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,GAAG;AACV;AACA,OAAO,EAAE;AACT;;AAEA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B,uBAAuB;AACjD;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC9EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,uCAAuC;AAClD,WAAW,oDAAoD;AAC/D,WAAW,8DAA8D;AACzE,WAAW,qDAAqD;AAChE,WAAW,+DAA+D;AAC1E,WAAW,sDAAsD;AACjE,WAAW,gEAAgE;AAC3E,WAAW,qDAAqD;AAChE,WAAW,+DAA+D;AAC1E,WAAW,yDAAyD;AACpE,WAAW,mEAAmE;AAC9E,WAAW,2CAA2C;AACtD,WAAW,2CAA2C;AACtD;AACA,oDAAoD,sCAAsC;AAC1F;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACzEA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,mBAAmB,mBAAO,CAAC,GAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;;AAEA;AACA;;;;;;;;ACLA;AACA;AACA;;;;;;;;ACFA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2CAA2C;AACtD,WAAW,gDAAgD;AAC3D,WAAW,iDAAiD;AAC5D,WAAW,2CAA2C;AACtD;AACA,OAAO;AACP;AACA;AACA,WAAW,0CAA0C;AACrD,WAAW,0CAA0C;AACrD,WAAW,4CAA4C;AACvD;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,WAAW,4CAA4C;AACvD,WAAW,gDAAgD;AAC3D;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA,iBAAiB,mBAAO,CAAC,GAAsB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,uBAAuB,eAAe;AACtC,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA,uBAAuB,oBAAoB;AAC3C,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC;AACA,yCAAyC,yDAAyD;AAClG;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAA2D;AAClF,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+CAA+C;AACtE;AACA,OAAO;AACP;AACA,KAAK;;;AAGL;AACA;AACA;;;;;;;;AC7KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;;;;;;;;ACLA,eAAe,mBAAO,CAAC,GAAa;AACpC,iBAAiB,mBAAO,CAAC,GAAe;AACxC,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;;AAEA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D,wBAAwB,mBAAO,CAAC,GAA4B;AAC5D,0BAA0B,mBAAO,CAAC,GAA8B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,OAAO;AACP,kBAAkB;AAClB;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC9DA;AACA;AACA;AACA,kBAAkB,6BAA6B,wBAAwB,EAAE;AACzE;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,oCAAoC,wBAAwB,EAAE;AAChF;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA,kBAAkB,qCAAqC,wBAAwB,EAAE;AACjF;AACA;AACA;AACA;;;;;;;;ACPA,eAAe,mBAAO,CAAC,GAAmB;AAC1C,sBAAsB,mBAAO,CAAC,GAA0B;AACxD,mBAAmB,mBAAO,CAAC,CAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;;;;;;;;;ACAA;AACA;;;;;;;UCFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCtBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = app => {\n\n  class Atom extends app.meta.AtomBase {\n\n    async create({ atomClass, item, user }) {\n      // super\n      const key = await super.create({ atomClass, item, user });\n      // add layout\n      const res = await this.ctx.model.layout.insert({\n        atomId: key.atomId,\n      });\n      const itemId = res.insertId;\n      // add content\n      const content = {\n        login: '/a/login/login',\n        loginOnStart: true,\n      };\n      await this.ctx.model.layoutContent.insert({\n        atomId: key.atomId,\n        itemId,\n        content: JSON.stringify(content),\n      });\n      return { atomId: key.atomId, itemId };\n    }\n\n    async read({ atomClass, options, key, user }) {\n      // super\n      const item = await super.read({ atomClass, options, key, user });\n      if (!item) return null;\n      // meta\n      this._getMeta(item);\n      // ok\n      return item;\n    }\n\n    async select({ atomClass, options, items, user }) {\n      // super\n      await super.select({ atomClass, options, items, user });\n      // meta\n      for (const item of items) {\n        this._getMeta(item);\n      }\n    }\n\n    async write({ atomClass, target, key, item, options, user }) {\n      // super\n      await super.write({ atomClass, target, key, item, options, user });\n      // update layout\n      const data = await this.ctx.model.layout.prepareData(item);\n      data.id = key.itemId;\n      await this.ctx.model.layout.update(data);\n      // update content\n      await this.ctx.model.layoutContent.update({\n        content: item.content,\n      }, { where: {\n        atomId: key.atomId,\n      } });\n    }\n\n    async delete({ atomClass, key, user }) {\n      // delete layout\n      await this.ctx.model.layout.delete({\n        id: key.itemId,\n      });\n      // delete content\n      await this.ctx.model.layoutContent.delete({\n        itemId: key.itemId,\n      });\n      // super\n      await super.delete({ atomClass, key, user });\n    }\n\n    _getMeta(item) {\n    }\n\n  }\n\n  return Atom;\n};\n","module.exports = app => {\n\n  class Version extends app.meta.BeanBase {\n\n    async update(options) {\n      if (options.version === 3) {\n        // create table: aLayout\n        let sql = `\n          CREATE TABLE aLayout (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            description varchar(255) DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n          `;\n        await this.ctx.model.query(sql);\n\n        // create table: aLayoutContent\n        sql = `\n          CREATE TABLE aLayoutContent (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            atomId int(11) DEFAULT '0',\n            itemId int(11) DEFAULT '0',\n            content JSON DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n\n        // create view: aLayoutViewFull\n        sql = `\n          CREATE VIEW aLayoutViewFull as\n            select a.*,b.content from aLayout a\n              left join aLayoutContent b on a.id=b.itemId\n        `;\n        await this.ctx.model.query(sql);\n\n      }\n    }\n\n    async init(options) {\n      if (options.version === 3) {\n        // add role rights\n        const roleRights = [\n          { roleName: 'system', action: 'create' },\n          { roleName: 'system', action: 'read', scopeNames: 0 },\n          { roleName: 'system', action: 'read', scopeNames: 'superuser' },\n          { roleName: 'system', action: 'write', scopeNames: 0 },\n          { roleName: 'system', action: 'write', scopeNames: 'superuser' },\n          { roleName: 'system', action: 'delete', scopeNames: 0 },\n          { roleName: 'system', action: 'delete', scopeNames: 'superuser' },\n          { roleName: 'system', action: 'clone', scopeNames: 0 },\n          { roleName: 'system', action: 'clone', scopeNames: 'superuser' },\n          { roleName: 'system', action: 'authorize', scopeNames: 0 },\n          { roleName: 'system', action: 'authorize', scopeNames: 'superuser' },\n          { roleName: 'system', action: 'deleteBulk' },\n          { roleName: 'system', action: 'exportBulk' },\n        ];\n        await this.ctx.bean.role.addRoleRightBatch({ atomClassName: 'layout', roleRights });\n      }\n    }\n\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst atomLayout = require('./bean/atom.layout.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // atom\n    'atom.layout': {\n      mode: 'app',\n      bean: atomLayout,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  Layout: '布局',\n  Copyright: '版权',\n  Clock: '时钟',\n  Dashboard: '仪表板',\n  Mine: '我的',\n  Fullscreen: '全屏',\n  Button: '按钮',\n  Buttons: '按钮',\n  Panel: '面板',\n  Panels: '面板',\n  'Sidebar Button': '边栏按钮',\n  'Sidebar Panel': '边栏面板',\n  'Create Layout': '新建布局',\n  'Layout List': '布局列表',\n  'PC Layout': 'PC布局',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  // const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const content = {\n    sidebar: {\n      top: {\n        buttons: [\n          { module: 'a-layoutpc', name: 'buttonHome' },\n          { module: 'a-layoutpc', name: 'buttonDashboard' },\n          { module: 'a-layoutpc', name: 'buttonFullscreen' },\n          { module: 'a-layoutpc', name: 'buttonMine' },\n        ],\n      },\n      left: {\n        panels: [\n          { module: 'a-layoutpc', name: 'panelMenu' },\n          { module: 'a-layoutpc', name: 'panelAtom' },\n          { module: 'a-layoutpc', name: 'panelSearch' },\n        ],\n      },\n      right: {\n        panels: [],\n      },\n      bottom: {\n        panels: [],\n        buttons: [\n          { module: 'a-layoutpc', name: 'buttonClock' },\n          { module: 'a-layoutpc', name: 'buttonCopyright' },\n        ],\n      },\n    },\n  };\n  const layout = {\n    atomName: 'PC Layout',\n    atomStaticKey: 'layoutPC',\n    atomRevision: 0,\n    description: '',\n    content: JSON.stringify(content),\n    resourceRoles: 'root',\n  };\n  return layout;\n};\n","const layoutPC = require('./layout/layoutPC.js');\n\nmodule.exports = app => {\n  const layouts = [\n    layoutPC(app),\n  ];\n  return layouts;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const resources = [\n    // menu\n    {\n      atomName: 'Create Layout',\n      atomStaticKey: 'createLayout',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.Create',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'layout',\n        atomAction: 'create',\n      }),\n      resourceRoles: 'template.system',\n    },\n    {\n      atomName: 'Layout List',\n      atomStaticKey: 'listLayout',\n      atomRevision: 0,\n      atomCategoryId: 'a-base:menu.List',\n      resourceType: 'a-base:menu',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        atomClassName: 'layout',\n        atomAction: 'read',\n      }),\n      resourceRoles: 'template.system',\n    },\n    // panels\n    {\n      atomName: 'Menu',\n      atomStaticKey: 'panelMenu',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:panel.General',\n      resourceType: 'a-layoutpc:panel',\n      resourceConfig: JSON.stringify({\n        url: '/a/basefront/resource/tree',\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Atom',\n      atomStaticKey: 'panelAtom',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:panel.General',\n      resourceType: 'a-layoutpc:panel',\n      resourceConfig: JSON.stringify({\n        url: '/a/basefront/atom/list',\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Search',\n      atomStaticKey: 'panelSearch',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:panel.General',\n      resourceType: 'a-layoutpc:panel',\n      resourceConfig: JSON.stringify({\n        url: '/a/basefront/atom/searchQuick',\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Mine',\n      atomStaticKey: 'panelMine',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:panel.General',\n      resourceType: 'a-layoutpc:panel',\n      resourceConfig: JSON.stringify({\n        url: '/a/user/user/mine',\n      }),\n      resourceRoles: 'root',\n    },\n    // buttons\n    {\n      atomName: 'Home',\n      atomStaticKey: 'buttonHome',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonLink',\n        icon: { material: 'home' },\n        actionPath: '/a/dashboard/dashboard?key=home',\n        scene: 'dashboard',\n        sceneOptions: { name: 'home' },\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Dashboard',\n      atomStaticKey: 'buttonDashboard',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonLink',\n        icon: { material: 'dashboard' },\n        actionPath: '/a/dashboard/dashboard',\n        scene: 'dashboard',\n        sceneOptions: { name: 'dashboard' },\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Fullscreen',\n      atomStaticKey: 'buttonFullscreen',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonFullscreen',\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Mine',\n      atomStaticKey: 'buttonMine',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonMine',\n        icon: { material: 'person' },\n        actionPath: null,\n        scene: 'sidebar', sceneOptions: { side: 'right', module: 'a-layoutpc', name: 'panelMine' },\n        showSeparator: true,\n        fixed: true,\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Clock',\n      atomStaticKey: 'buttonClock',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonClock',\n        actionPath: '/a/layoutpc/button/clock/preferences',\n        scene: 'sidebar',\n        sceneOptions: { side: 'right', name: 'preferences', title: 'Preferences' },\n      }),\n      resourceRoles: 'root',\n    },\n    {\n      atomName: 'Copyright',\n      atomStaticKey: 'buttonCopyright',\n      atomRevision: 0,\n      atomCategoryId: 'a-layoutpc:button.General',\n      resourceType: 'a-layoutpc:button',\n      resourceConfig: JSON.stringify({\n        module: moduleInfo.relativeName,\n        component: 'buttonLink',\n        icon: null,\n        actionPath: '/a/basefront/base/about',\n        scene: 'sidebar',\n        sceneOptions: { side: 'right', name: 'about', title: 'About' },\n        showLabel: true,\n      }),\n      resourceRoles: 'root',\n    },\n\n\n  ];\n  return resources;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const schemas = {};\n  // layout\n  schemas.layout = {\n    type: 'object',\n    properties: {\n      atomName: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Name',\n        notEmpty: true,\n      },\n      atomStaticKey: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'KeyForAtom',\n        ebReadOnly: true,\n        notEmpty: true,\n      },\n      description: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Description',\n      },\n      content: {\n        type: 'string',\n        ebType: 'json',\n        ebTitle: 'Content',\n        notEmpty: true,\n      },\n    },\n  };\n  // layout search\n  schemas.layoutSearch = {\n    type: 'object',\n    properties: {\n      description: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Description',\n      },\n    },\n  };\n  return schemas;\n};\n","\nmodule.exports = app => {\n  const controllers = {\n  };\n  return controllers;\n};\n","const routes = require('./routes.js');\nconst services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // beans\n  const beans = require('./beans.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const staticLayouts = require('./config/static/layouts.js')(app);\n  const staticResources = require('./config/static/resources.js')(app);\n  // meta\n  const meta = {\n    base: {\n      atoms: {\n        layout: {\n          info: {\n            bean: 'layout',\n            title: 'Layout',\n            tableName: 'aLayout',\n            tableNameModes: {\n              full: 'aLayoutViewFull',\n            },\n          },\n          actions: {\n            write: {\n              enableOnStatic: true,\n            },\n          },\n          validator: 'layout',\n          search: {\n            validator: 'layoutSearch',\n          },\n        },\n      },\n      resources: {\n        button: {\n          title: 'Sidebar Button',\n        },\n        panel: {\n          title: 'Sidebar Panel',\n        },\n      },\n      statics: {\n        'a-layoutpc.layout': {\n          items: staticLayouts,\n        },\n        'a-base.resource': {\n          items: staticResources,\n        },\n      },\n    },\n    validation: {\n      validators: {\n        layout: {\n          schemas: 'layout',\n        },\n        layoutSearch: {\n          schemas: 'layoutSearch',\n        },\n      },\n      keywords: {},\n      schemas: {\n        layout: schemas.layout,\n        layoutSearch: schemas.layoutSearch,\n      },\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  class Layout extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aLayout', options: { disableDeleted: false } });\n    }\n  }\n  return Layout;\n};\n","module.exports = app => {\n  class LayoutContent extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aLayoutContent', options: { disableDeleted: false } });\n    }\n  }\n  return LayoutContent;\n};\n","module.exports = app => {\n  class LayoutFull extends app.meta.Model {\n    constructor(ctx) {\n      super(ctx, { table: 'aLayoutViewFull', options: { disableDeleted: false } });\n    }\n  }\n  return LayoutFull;\n};\n","const layout = require('./model/layout.js');\nconst layoutContent = require('./model/layoutContent.js');\nconst layoutFull = require('./model/layoutFull.js');\n\nmodule.exports = app => {\n  const models = {\n    layout,\n    layoutContent,\n    layoutFull,\n  };\n  return models;\n};\n","module.exports = [\n];\n","\nmodule.exports = {\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}