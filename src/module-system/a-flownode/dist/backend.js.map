{"version":3,"file":"backend.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;;AAEA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,+BAA+B,SAAS,+BAA+B;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,yBAAyB;AAC5C;AACA,kCAAkC,iBAAiB;AACnD,QAAQ;AACR,sCAAsC,iBAAiB;AACvD;AACA;;AAEA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA,SAAS;AACT,QAAQ;AACR;AACA,wCAAwC,kCAAkC;AAC1E;AACA;;AAEA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA,uDAAuD,WAAW;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,gBAAgB,UAAU,GAAG,QAAQ;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACtHA;AACA;AACA;AACA;AACA,sDAAsD,wBAAwB;AAC9E;AACA;AACA;;AAEA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACdA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,6BAA6B,mBAAO,CAAC,GAAiC;AACtE,yBAAyB,mBAAO,CAAC,GAA8B;AAC/D,+BAA+B,mBAAO,CAAC,GAAoC;AAC3E,gCAAgC,mBAAO,CAAC,GAAqC;AAC7E,6BAA6B,mBAAO,CAAC,GAAkC;AACvE,6BAA6B,mBAAO,CAAC,GAAkC;AACvE,gCAAgC,mBAAO,CAAC,GAAqC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AChDA;;;;;;;;ACAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;ACbA;AACA;;;;;;;;ACDA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;;;;;;;AChBA,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACxBA,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC,KAAK;AACL;AACA;AACA;AACA;AACA,cAAc,8BAA8B;AAC5C;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;;;;;;;;ACjCA,iBAAiB,mBAAO,CAAC,GAAsB;AAC/C,wBAAwB,mBAAO,CAAC,GAA6B;AAC7D,wBAAwB,mBAAO,CAAC,GAA6B;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;;;;;;;;ACHA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;AAC3C,wBAAwB,mBAAO,CAAC,GAA6B;;AAE7D;AACA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpCA;AACA,kBAAkB,mBAAO,CAAC,GAAgC;AAC1D,oBAAoB,mBAAO,CAAC,GAAwB;AACpD,oBAAoB,mBAAO,CAAC,GAAwB;AACpD;AACA;AACA,eAAe;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;UCHA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://egg-born-module-a-flownode/./backend/src/aops.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.edge.sequence.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.activityNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.activityService.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.endEventNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.startEventNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.startEventTimer.js","webpack://egg-born-module-a-flownode/./backend/src/bean/queue.startEventTimer.js","webpack://egg-born-module-a-flownode/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-flownode/./backend/src/beans.js","webpack://egg-born-module-a-flownode/./backend/src/common/flowServiceBase.js","webpack://egg-born-module-a-flownode/./backend/src/config/config.js","webpack://egg-born-module-a-flownode/./backend/src/config/errors.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/defaults.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/edges.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/nodes.js","webpack://egg-born-module-a-flownode/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-flownode/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-flownode/./backend/src/config/locales.js","webpack://egg-born-module-a-flownode/./backend/src/config/validation/schema/activityService.js","webpack://egg-born-module-a-flownode/./backend/src/config/validation/schema/sequence.js","webpack://egg-born-module-a-flownode/./backend/src/config/validation/schema/startEventTimer.js","webpack://egg-born-module-a-flownode/./backend/src/config/validation/schemas.js","webpack://egg-born-module-a-flownode/./backend/src/controllers.js","webpack://egg-born-module-a-flownode/./backend/src/main.js","webpack://egg-born-module-a-flownode/./backend/src/meta.js","webpack://egg-born-module-a-flownode/./backend/src/models.js","webpack://egg-born-module-a-flownode/./backend/src/routes.js","webpack://egg-born-module-a-flownode/./backend/src/services.js","webpack://egg-born-module-a-flownode/webpack/bootstrap","webpack://egg-born-module-a-flownode/webpack/before-startup","webpack://egg-born-module-a-flownode/webpack/startup","webpack://egg-born-module-a-flownode/webpack/after-startup"],"sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","module.exports = ctx => {\n  class FlowEdge extends ctx.app.meta.FlowEdgeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onEdgeEnter() {\n      // super\n      let res = await super.onEdgeEnter();\n      if (!res) return false;\n      // check conditionExpression\n      const conditionExpression =\n        this.contextEdge._edgeDef.options && this.contextEdge._edgeDef.options.conditionExpression;\n      // return true on empty/null/undefined\n      if (!conditionExpression && conditionExpression !== false) return true;\n      if (conditionExpression === false) return false;\n      // contextNodePrevious\n      const contextNodePrevious = this.contextNode.contextEdge && this.contextNode.contextEdge.contextNode;\n      // evaluateExpression\n      res = ctx.bean.flow.evaluateExpression({\n        expression: conditionExpression,\n        globals: {\n          context: this.context,\n          contextNode: this.contextNode,\n          contextEdge: this.contextEdge,\n          contextNodePrevious,\n        },\n      });\n      return !!res;\n    }\n  }\n\n  return FlowEdge;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onNodeDoing() {\n      // super\n      await super.onNodeDoing();\n      // bean/parameters\n      const bean = this.contextNode._nodeDef.options.bean;\n      const parameterExpression = this.contextNode._nodeDef.options.parameterExpression;\n      // check\n      if (!bean) {\n        throw new Error(\n          `flow service bean is not set: flow:${this.context._flowDef.atomName}, node:${this.contextNode._nodeDef.name}`\n        );\n      }\n      // executeService\n      await ctx.bean.flow.executeService({\n        bean,\n        parameterExpression,\n        globals: {\n          context: this.context,\n          contextNode: this.contextNode,\n        },\n      });\n      // ok\n      return true;\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onNodeLeave() {\n      await super.onNodeLeave();\n      // end\n      await this.flowInstance._endFlow({\n        flowHandleStatus: 1,\n        flowRemark: null,\n        // should not handle atom\n        // atom: {\n        //   close: true,\n        // },\n      });\n      // also true\n      return true;\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async deploy({ deploy, flowDefId, node }) {\n      if (deploy) {\n        await this._addSchedule({ flowDefId, node });\n      } else {\n        await this._deleteSchedule2({ flowDefId, node });\n      }\n    }\n\n    async _addSchedule({ flowDefId, node }) {\n      const repeat = this._getJobRepeat(node);\n      if (!repeat) return;\n      if (!repeat.every && !repeat.cron) return;\n      // push\n      const jobName = this._getJobName(flowDefId, node);\n      ctx.app.meta.queue.push({\n        subdomain: ctx.subdomain,\n        module: moduleInfo.relativeName,\n        queueName: 'startEventTimer',\n        jobName,\n        jobOptions: {\n          repeat,\n        },\n        data: {\n          flowDefId,\n          node,\n        },\n      });\n    }\n\n    async _runSchedule(context) {\n      const { flowDefId, node } = context.data;\n      // ignore on test\n      if (ctx.app.meta.isTest) return;\n      // check if valid\n      if (!(await this._checkJobValid(context))) {\n        await this._deleteSchedule(context);\n        return;\n      }\n      // bean/parameterExpression\n      const bean = node.options && node.options.bean;\n      const parameterExpression = node.options && node.options.parameterExpression;\n      if (bean) {\n        // bean\n        const parameter = ctx.bean.flow.evaluateExpression({\n          expression: parameterExpression,\n          globals: null,\n        });\n        await ctx.bean.flow.executeService({\n          bean,\n          parameter: { flowDefId, node, parameter },\n          globals: null,\n        });\n      } else {\n        // start\n        await ctx.bean.flow.startById({ flowDefId, startEventId: node.id });\n      }\n    }\n\n    async _checkJobValid(context) {\n      const job = context.job;\n      const { flowDefId, node } = context.data;\n      // flowDef\n      const flowDef = await ctx.bean.flowDef.getById({ flowDefId });\n      if (!flowDef) return false;\n      // atomDisabled\n      if (flowDef.atomDisabled === 1) return false;\n      // content\n      const content = flowDef.content ? JSON.parse(flowDef.content) : null;\n      if (!content) return false;\n      const nodeConfig = content.process.nodes.find(item => item.id === node.id);\n      if (!nodeConfig) return false;\n      // check if changed\n      const jobKeyActive = ctx.app.meta.queue._getRepeatKey(job.data.jobName, job.data.jobOptions.repeat);\n      const jobKeyConfig = ctx.app.meta.queue._getRepeatKey(\n        this._getJobName(flowDefId, nodeConfig),\n        this._getJobRepeat(nodeConfig)\n      );\n      if (jobKeyActive !== jobKeyConfig) return false;\n      // ok\n      return true;\n    }\n\n    async _deleteSchedule(context) {\n      const job = context.job;\n      const jobKeyActive = ctx.app.meta.queue._getRepeatKey(job.data.jobName, job.data.jobOptions.repeat);\n      const repeat = await job.queue.repeat;\n      await repeat.removeRepeatableByKey(jobKeyActive);\n    }\n\n    async _deleteSchedule2({ flowDefId, node }) {\n      const jobKeyActive = ctx.app.meta.queue._getRepeatKey(\n        this._getJobName(flowDefId, node),\n        this._getJobRepeat(node)\n      );\n      const queue = ctx.app.meta.queue._getQueue({\n        module: moduleInfo.relativeName,\n        queueName: 'startEventTimer',\n      });\n      const repeat = await queue.repeat;\n      await repeat.removeRepeatableByKey(jobKeyActive);\n    }\n\n    _getJobName(flowDefId, node) {\n      return `${flowDefId}.${node.id}`.replace(/:/g, '.');\n    }\n    _getJobRepeat(node) {\n      return node.options && node.options.repeat;\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Queue extends app.meta.BeanBase {\n    async execute(context) {\n      const _nodeBaseBean = this.ctx.bean._newBean(`${moduleInfo.relativeName}.flow.node.startEventTimer`);\n      await _nodeBaseBean._runSchedule(context);\n    }\n  }\n\n  return Queue;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n    async update(options) {\n      if (options.version === 1) {\n        // empty\n      }\n    }\n\n    async init(options) {}\n\n    async test() {}\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst queueStartEventTimer = require('./bean/queue.startEventTimer.js');\nconst flowEdgeSequence = require('./bean/flow.edge.sequence.js');\nconst flowNodeStartEventNone = require('./bean/flow.node.startEventNone.js');\nconst flowNodeStartEventTimer = require('./bean/flow.node.startEventTimer.js');\nconst flowNodeEndEventNone = require('./bean/flow.node.endEventNone.js');\nconst flowNodeActivityNone = require('./bean/flow.node.activityNone.js');\nconst flowNodeActivityService = require('./bean/flow.node.activityService.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // queue\n    'queue.startEventTimer': {\n      mode: 'app',\n      bean: queueStartEventTimer,\n    },\n    // flow\n    'flow.edge.sequence': {\n      mode: 'ctx',\n      bean: flowEdgeSequence,\n    },\n    'flow.node.startEventNone': {\n      mode: 'ctx',\n      bean: flowNodeStartEventNone,\n    },\n    'flow.node.startEventTimer': {\n      mode: 'ctx',\n      bean: flowNodeStartEventTimer,\n    },\n    'flow.node.endEventNone': {\n      mode: 'ctx',\n      bean: flowNodeEndEventNone,\n    },\n    'flow.node.activityNone': {\n      mode: 'ctx',\n      bean: flowNodeActivityNone,\n    },\n    'flow.node.activityService': {\n      mode: 'ctx',\n      bean: flowNodeActivityService,\n    },\n  };\n  return beans;\n};\n","module.exports = class FlowServiceBase {};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // queues\n  config.queues = {\n    startEventTimer: {\n      bean: 'startEventTimer',\n      concurrency: true,\n    },\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {};\n","module.exports = {\n  sequence: {\n    conditionExpression: null,\n  },\n  startEventTimer: {\n    repeat: {\n      every: 0,\n      cron: null,\n    },\n    bean: null,\n    parameterExpression: null,\n  },\n  activityService: {\n    bean: null,\n    parameterExpression: null,\n  },\n};\n","const defaults = require('./defaults.js');\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const edges = {\n    sequence: {\n      title: 'Sequence',\n      bean: 'sequence',\n      validator: {\n        module: moduleInfo.relativeName,\n        validator: 'sequence',\n      },\n    },\n  };\n\n  for (const key in edges) {\n    const node = edges[key];\n    node.options = {};\n    if (defaults[key]) {\n      node.options.default = defaults[key];\n    }\n  }\n\n  return edges;\n};\n","const defaults = require('./defaults.js');\n\nmodule.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const nodes = {\n    // events\n    startEventNone: {\n      title: 'StartEventNone',\n      group: 'startEvent',\n      bean: 'startEventNone',\n      icon: { f7: ':flow:start-event-none' },\n    },\n    startEventTimer: {\n      title: 'StartEventTimer',\n      group: 'startEvent',\n      bean: 'startEventTimer',\n      icon: { f7: ':flow:start-event-timer' },\n      validator: {\n        module: moduleInfo.relativeName,\n        validator: 'startEventTimer',\n      },\n    },\n    endEventNone: {\n      title: 'EndEventNone',\n      group: 'endEvent',\n      bean: 'endEventNone',\n      icon: { f7: ':flow:end-event-none' },\n    },\n    // activities\n    activityNone: {\n      title: 'ActivityNone',\n      group: 'activity',\n      bean: 'activityNone',\n      icon: { f7: ':flow:activity-none' },\n    },\n    activityService: {\n      title: 'ActivityService',\n      group: 'activity',\n      bean: 'activityService',\n      icon: { f7: ':flow:activity-service' },\n      validator: {\n        module: moduleInfo.relativeName,\n        validator: 'activityService',\n      },\n    },\n  };\n\n  for (const key in nodes) {\n    const node = nodes[key];\n    node.options = {};\n    if (defaults[key]) {\n      node.options.default = defaults[key];\n    }\n  }\n\n  return nodes;\n};\n","module.exports = {\n  StartEventNone: 'StartEvent: None',\n  StartEventTimer: 'StartEvent: Timer',\n  EndEventNone: 'EndEvent: None',\n  ActivityNone: 'Activity: None',\n  ActivityService: 'Activity: Service',\n};\n","module.exports = {\n  StartEventNone: '空开始事件',\n  StartEventTimer: '定时开始事件',\n  EndEventNone: '空结束事件',\n  ActivityNone: '空活动',\n  ActivityService: '服务活动',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  // const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  const schemas = {};\n  // activityService\n  schemas.activityService = {\n    type: 'object',\n    properties: {\n      bean: {\n        type: 'object',\n        ebType: 'component',\n        ebTitle: 'Bean',\n        ebRender: {\n          module: 'a-flowchart',\n          name: 'renderBeanFlowService',\n        },\n        notEmpty: true,\n      },\n      parameterExpression: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Parameter Expression',\n        ebParams: {\n          textarea: true,\n        },\n      },\n    },\n  };\n  return schemas;\n};\n","module.exports = app => {\n  const schemas = {};\n  // sequence\n  schemas.sequence = {\n    type: 'object',\n    properties: {\n      conditionExpression: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Condition Expression',\n        ebParams: {\n          textarea: true,\n        },\n      },\n    },\n  };\n  return schemas;\n};\n","module.exports = app => {\n  const schemas = {};\n  // startEventTimer\n  schemas.startEventTimer = {\n    type: 'object',\n    properties: {\n      repeat: {\n        type: 'object',\n        ebType: 'json',\n        ebTitle: 'Repeat',\n        notEmpty: true,\n      },\n      bean: {\n        type: 'object',\n        ebType: 'component',\n        ebTitle: 'Bean',\n        ebRender: {\n          module: 'a-flowchart',\n          name: 'renderBeanFlowService',\n        },\n        notEmpty: true,\n      },\n      parameterExpression: {\n        type: 'string',\n        ebType: 'text',\n        ebTitle: 'Parameter Expression',\n        ebParams: {\n          textarea: true,\n        },\n      },\n    },\n  };\n  return schemas;\n};\n","const sequence = require('./schema/sequence.js');\nconst startEventTimer = require('./schema/startEventTimer.js');\nconst activityService = require('./schema/activityService.js');\n\nmodule.exports = app => {\n  const schemas = {};\n  // sequence\n  Object.assign(schemas, sequence(app));\n  // startEventTimer\n  Object.assign(schemas, startEventTimer(app));\n  // activityService\n  Object.assign(schemas, activityService(app));\n  // ok\n  return schemas;\n};\n","module.exports = app => {\n  const controllers = {};\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst FlowServiceBase = require('./common/flowServiceBase.js');\n\nmodule.exports = app => {\n  // FlowServiceBase\n  app.meta.FlowServiceBase = FlowServiceBase;\n\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n};\n","module.exports = app => {\n  const schemas = require('./config/validation/schemas.js')(app);\n  const flowNodes = require('./config/flow/nodes.js')(app);\n  const flowEdges = require('./config/flow/edges.js')(app);\n  const meta = {\n    base: {\n      atoms: {},\n    },\n    validation: {\n      validators: {\n        // sequence\n        sequence: {\n          schemas: 'sequence',\n        },\n        // startEventTimer\n        startEventTimer: {\n          schemas: 'startEventTimer',\n        },\n        // activityService\n        activityService: {\n          schemas: 'activityService',\n        },\n      },\n      schemas,\n    },\n    flow: {\n      nodes: flowNodes,\n      edges: flowEdges,\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {};\n  return models;\n};\n","module.exports = app => {\n  const routes = [];\n  return routes;\n};\n","module.exports = app => {\n  const services = {};\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n",""],"names":[],"sourceRoot":""}