{"version":3,"sources":["webpack://egg-born-module-a-flownode/./backend/src/aops.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.edge.sequence.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.activityNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.activityService.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.endEventNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.startEventNone.js","webpack://egg-born-module-a-flownode/./backend/src/bean/flow.node.startEventTimer.js","webpack://egg-born-module-a-flownode/./backend/src/bean/queue.startEventTimer.js","webpack://egg-born-module-a-flownode/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-flownode/./backend/src/beans.js","webpack://egg-born-module-a-flownode/./backend/src/common/flowServiceBase.js","webpack://egg-born-module-a-flownode/./backend/src/config/config.js","webpack://egg-born-module-a-flownode/./backend/src/config/errors.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/defaults.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/edges.js","webpack://egg-born-module-a-flownode/./backend/src/config/flow/nodes.js","webpack://egg-born-module-a-flownode/./backend/src/config/locale/en-us.js","webpack://egg-born-module-a-flownode/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-flownode/./backend/src/config/locales.js","webpack://egg-born-module-a-flownode/./backend/src/controllers.js","webpack://egg-born-module-a-flownode/./backend/src/main.js","webpack://egg-born-module-a-flownode/./backend/src/meta.js","webpack://egg-born-module-a-flownode/./backend/src/models.js","webpack://egg-born-module-a-flownode/./backend/src/routes.js","webpack://egg-born-module-a-flownode/./backend/src/services.js","webpack://egg-born-module-a-flownode/webpack/bootstrap","webpack://egg-born-module-a-flownode/webpack/startup"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wCAAwC;AACxD;AACA,iBAAiB,uCAAuC;AACxD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,0BAA0B;AAC5C;AACA,iCAAiC,kBAAkB;AACnD,OAAO;AACP;AACA;AACA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,yBAAyB,UAAU,GAAG,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sBAAsB,6BAA6B;AACnD;AACA,SAAS;AACT,OAAO;AACP;AACA,uCAAuC,mCAAmC;AAC1E;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;AACA,sDAAsD,YAAY;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU,GAAG,cAAc;AACtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY,KAAK,IAAI,QAAQ,GAAG,GAAG,GAAG,OAAO;AAC7C;;;;;;;;;ACvGA;AACA;AACA;;AAEA;AACA,sDAAsD,wBAAwB;AAC9E;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACZA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;;ACjBA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,6BAA6B,mBAAO,CAAC,GAAiC;AACtE,yBAAyB,mBAAO,CAAC,GAA8B;AAC/D,+BAA+B,mBAAO,CAAC,GAAoC;AAC3E,gCAAgC,mBAAO,CAAC,GAAqC;AAC7E,6BAA6B,mBAAO,CAAC,GAAkC;AACvE,6BAA6B,mBAAO,CAAC,GAAkC;AACvE,gCAAgC,mBAAO,CAAC,GAAqC;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AChDA;AACA;;;;;;;;ACDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;ACZA;AACA;AACA;;;;;;;;ACFA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;ACLA,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA,WAAW,mBAAO,CAAC,GAAmB;AACtC,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACHA;AACA;AACA;AACA;AACA;;;;;;;;ACJA,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;AAC3C,wBAAwB,mBAAO,CAAC,GAA6B;;AAE7D;;AAEA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,GAAW;AAClC;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;AAChD;AACA,mBAAmB,mBAAO,CAAC,GAAe;AAC1C;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,eAAe,mBAAO,CAAC,GAAW;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtCA,kBAAkB,mBAAO,CAAC,GAAwB;AAClD,kBAAkB,mBAAO,CAAC,GAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,kBAAkB;AAClB;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UCrBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = app => {\n  const aops = {};\n  return aops;\n};\n","module.exports = ctx => {\n  class FlowEdge extends ctx.app.meta.FlowEdgeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onEdgeEnter() {\n      // super\n      await super.onEdgeEnter();\n      // check conditionExpression\n      const conditionExpression = this.contextEdge._edgeDef.options && this.contextEdge._edgeDef.options.conditionExpression;\n      if (conditionExpression === undefined) return true;\n      if (!conditionExpression) return false;\n      const res = ctx.bean.flow.evaluateExpression({\n        expression: conditionExpression,\n        globals: {\n          context: this.context,\n          contextNode: this.contextNode,\n          contextEdge: this.contextEdge,\n        },\n      });\n      return !!res;\n    }\n\n  }\n\n  return FlowEdge;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onNodeDoing() {\n      // super\n      await super.onNodeDoing();\n      // bean/parameters\n      const bean = this.contextNode._nodeDef.options.bean;\n      const parameterExpression = this.contextNode._nodeDef.options.parameterExpression;\n      await ctx.bean.flow.executeService({\n        bean,\n        parameterExpression,\n        globals: {\n          context: this.context,\n          contextNode: this.contextNode,\n        },\n      });\n      // ok\n      return true;\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async onNodeLeave() {\n      await super.onNodeLeave();\n      // atom\n      if (this.context._flow.flowAtomId) {\n        // _submitDirect\n        await ctx.bean.atom._submitDirect({\n          key: { atomId: this.context._flow.flowAtomId },\n          item: this.context._atom,\n          user: { id: this.context._atom.userIdUpdated },\n        });\n      }\n      // end\n      await this.flowInstance._endFlow();\n      // also true\n      return true;\n    }\n\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n  }\n\n  return FlowNode;\n};\n","module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class FlowNode extends ctx.app.meta.FlowNodeBase {\n    constructor(options) {\n      super(ctx, options);\n    }\n\n    async deploy({ deploy, flowDefId, node }) {\n      if (deploy) {\n        await this._addSchedule({ flowDefId, node });\n      } else {\n        // donot delete schedule\n      }\n    }\n\n    async _addSchedule({ flowDefId, node }) {\n      const repeat = node.options && node.options.repeat;\n      if (!repeat) return;\n      // push\n      const jobName = `${flowDefId}.${node.id}`;\n      ctx.app.meta.queue.push({\n        subdomain: ctx.subdomain,\n        module: moduleInfo.relativeName,\n        queueName: 'startEventTimer',\n        queueNameSub: flowDefId,\n        jobName,\n        jobOptions: {\n          repeat,\n        },\n        data: {\n          flowDefId,\n          node,\n        },\n      });\n    }\n\n    async _runSchedule(context) {\n      const { flowDefId, node } = context.data;\n      // ignore on test\n      if (ctx.app.meta.isTest) return;\n      // check if valid\n      if (!(await this._checkJobValid(context))) {\n        await this._deleteSchedule(context);\n        return;\n      }\n      // bean/parameterExpression\n      const bean = node.options && node.options.bean;\n      const parameterExpression = node.options && node.options.parameterExpression;\n      if (bean) {\n        // bean\n        const parameter = ctx.bean.flow.evaluateExpression({\n          expression: parameterExpression, globals: null,\n        });\n        await ctx.bean.flow.executeService({\n          bean,\n          parameter: { flowDefId, node, parameter },\n          globals: null,\n        });\n      } else {\n        // start\n        await ctx.bean.flow.startById({ flowDefId, startEventId: node.id });\n      }\n    }\n\n    async _checkJobValid(context) {\n      const job = context.job;\n      const { flowDefId, node } = context.data;\n      // flowDef\n      const flowDef = await ctx.bean.flowDef.getById({ flowDefId });\n      if (!flowDef) return false;\n      // atomDisabled\n      if (flowDef.atomDisabled === 1) return false;\n      // content\n      const content = flowDef.content ? JSON.parse(flowDef.content) : null;\n      if (!content) return false;\n      const nodeConfig = content.process.nodes.find(item => item.id === node.id);\n      if (!nodeConfig) return false;\n      // check if changed\n      const jobKeyActive = getRepeatKey(job.data.jobName, job.data.jobOptions.repeat);\n      const jobKeyConfig = getRepeatKey(`${flowDefId}.${nodeConfig.id}`, nodeConfig.options && nodeConfig.options.repeat);\n      if (jobKeyActive !== jobKeyConfig) return false;\n      // ok\n      return true;\n    }\n\n    async _deleteSchedule(context) {\n      const job = context.job;\n      const jobKeyActive = getRepeatKey(job.data.jobName, job.data.jobOptions.repeat);\n      const repeat = await job.queue.repeat;\n      await repeat.removeRepeatableByKey(jobKeyActive);\n    }\n\n  }\n\n  return FlowNode;\n};\n\nfunction getRepeatKey(name, repeat) {\n  const endDate = repeat.endDate ? new Date(repeat.endDate).getTime() : '';\n  const tz = repeat.tz || '';\n  const suffix = (repeat.cron ? repeat.cron : String(repeat.every)) || '';\n\n  return `${name}::${endDate}:${tz}:${suffix}`;\n}\n\n","module.exports = app => {\n  const moduleInfo = app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Queue extends app.meta.BeanBase {\n\n    async execute(context) {\n      const _nodeBaseBean = this.ctx.bean._newBean(`${moduleInfo.relativeName}.flow.node.startEventTimer`);\n      await _nodeBaseBean._runSchedule(context);\n    }\n\n  }\n\n  return Queue;\n};\n","module.exports = app => {\n  class Version extends app.meta.BeanBase {\n\n    async update(options) {\n      if (options.version === 1) {\n      }\n    }\n\n    async init(options) {\n    }\n\n    async test() {\n    }\n\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst queueStartEventTimer = require('./bean/queue.startEventTimer.js');\nconst flowEdgeSequence = require('./bean/flow.edge.sequence.js');\nconst flowNodeStartEventNone = require('./bean/flow.node.startEventNone.js');\nconst flowNodeStartEventTimer = require('./bean/flow.node.startEventTimer.js');\nconst flowNodeEndEventNone = require('./bean/flow.node.endEventNone.js');\nconst flowNodeActivityNone = require('./bean/flow.node.activityNone.js');\nconst flowNodeActivityService = require('./bean/flow.node.activityService.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // queue\n    'queue.startEventTimer': {\n      mode: 'app',\n      bean: queueStartEventTimer,\n    },\n    // flow\n    'flow.edge.sequence': {\n      mode: 'ctx',\n      bean: flowEdgeSequence,\n    },\n    'flow.node.startEventNone': {\n      mode: 'ctx',\n      bean: flowNodeStartEventNone,\n    },\n    'flow.node.startEventTimer': {\n      mode: 'ctx',\n      bean: flowNodeStartEventTimer,\n    },\n    'flow.node.endEventNone': {\n      mode: 'ctx',\n      bean: flowNodeEndEventNone,\n    },\n    'flow.node.activityNone': {\n      mode: 'ctx',\n      bean: flowNodeActivityNone,\n    },\n    'flow.node.activityService': {\n      mode: 'ctx',\n      bean: flowNodeActivityService,\n    },\n  };\n  return beans;\n};\n","module.exports = class FlowServiceBase {\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n\n  // queues\n  config.queues = {\n    startEventTimer: {\n      bean: 'startEventTimer',\n    },\n  };\n\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  sequence: {\n    title: 'Sequence',\n    bean: 'sequence',\n  },\n};\n","const defaults = require('./defaults.js');\n\nconst nodes = {\n  // events\n  startEventNone: {\n    title: 'StartEventNone',\n    group: 'startEvent',\n    bean: 'startEventNone',\n    icon: '/api/static/a/flownode/bpmn/events/start-event-none.svg',\n  },\n  startEventTimer: {\n    title: 'StartEventTimer',\n    group: 'startEvent',\n    bean: 'startEventTimer',\n    icon: '/api/static/a/flownode/bpmn/events/start-event-timer.svg',\n  },\n  endEventNone: {\n    title: 'EndEventNone',\n    group: 'endEvent',\n    bean: 'endEventNone',\n    icon: '/api/static/a/flownode/bpmn/events/end-event-none.svg',\n  },\n  // activities\n  activityNone: {\n    title: 'ActivityNone',\n    group: 'activity',\n    bean: 'activityNone',\n    icon: '/api/static/a/flownode/bpmn/activities/activity-none.svg',\n  },\n  activityService: {\n    title: 'ActivityService',\n    group: 'activity',\n    bean: 'activityService',\n    icon: '/api/static/a/flownode/bpmn/activities/activity-service.svg',\n  },\n};\n\nfor (const key in nodes) {\n  const node = nodes[key];\n  node.options = {};\n  if (defaults[key]) {\n    node.options.default = defaults[key];\n  }\n}\n\nmodule.exports = nodes;\n","module.exports = {\n  StartEventNone: 'StartEvent: None',\n  StartEventTimer: 'StartEvent: Timer',\n  EndEventNone: 'EndEvent: None',\n  ActivityNone: 'Activity: None',\n  ActivityService: 'Activity: Service',\n};\n","module.exports = {\n  StartEventNone: '空开始事件',\n  StartEventTimer: '定时开始事件',\n  EndEventNone: '空结束事件',\n  ActivityNone: '空活动',\n  ActivityService: '服务活动',\n};\n","module.exports = {\n  'en-us': require('./locale/en-us.js'),\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n  const controllers = {\n  };\n  return controllers;\n};\n","const config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\nconst FlowServiceBase = require('./common/flowServiceBase.js');\n\nmodule.exports = app => {\n\n  // FlowServiceBase\n  app.meta.FlowServiceBase = FlowServiceBase;\n\n  // aops\n  const aops = require('./aops.js')(app);\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n  // services\n  const services = require('./services.js')(app);\n  // models\n  const models = require('./models.js')(app);\n  // meta\n  const meta = require('./meta.js')(app);\n\n  return {\n    aops,\n    beans,\n    routes,\n    controllers,\n    services,\n    models,\n    config,\n    locales,\n    errors,\n    meta,\n  };\n\n};\n","const flowNodes = require('./config/flow/nodes.js');\nconst flowEdges = require('./config/flow/edges.js');\n\nmodule.exports = app => {\n  // const schemas = require('./config/validation/schemas.js')(app);\n  const meta = {\n    base: {\n      atoms: {\n      },\n    },\n    validation: {\n      validators: {\n      },\n      keywords: {},\n      schemas: {\n      },\n    },\n    flow: {\n      nodes: flowNodes,\n      edges: flowEdges,\n    },\n  };\n  return meta;\n};\n","module.exports = app => {\n  const models = {\n  };\n  return models;\n};\n","module.exports = app => {\n  const routes = [\n  ];\n  return routes;\n};\n","module.exports = app => {\n  const services = {\n  };\n  return services;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(421);\n"],"sourceRoot":""}