{"version":3,"sources":["webpack://egg-born-module-a-status/./backend/src/bean/bean.status.js","webpack://egg-born-module-a-status/./backend/src/bean/version.manager.js","webpack://egg-born-module-a-status/./backend/src/beans.js","webpack://egg-born-module-a-status/./backend/src/config/config.js","webpack://egg-born-module-a-status/./backend/src/config/errors.js","webpack://egg-born-module-a-status/./backend/src/config/locale/zh-cn.js","webpack://egg-born-module-a-status/./backend/src/config/locales.js","webpack://egg-born-module-a-status/./backend/src/controller/status.js","webpack://egg-born-module-a-status/./backend/src/controllers.js","webpack://egg-born-module-a-status/./backend/src/main.js","webpack://egg-born-module-a-status/./backend/src/routes.js","webpack://egg-born-module-a-status/./backend/src/service/status.js","webpack://egg-born-module-a-status/./backend/src/services.js","webpack://egg-born-module-a-status/webpack/bootstrap","webpack://egg-born-module-a-status/webpack/startup"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,uBAAuB,2BAA2B;AAClD;;AAEA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,yBAAyB,wBAAwB,aAAa,gBAAgB,GAAG,KAAK;AACtF;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC,6EAA6E,4BAA4B;AACzG,iBAAiB;AACjB,eAAe;AACf,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC9DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC3BA,uBAAuB,mBAAO,CAAC,GAA2B;AAC1D,mBAAmB,mBAAO,CAAC,GAAuB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;;;;;;;;ACFA;AACA;;;;;;;;ACDA;AACA,WAAW,mBAAO,CAAC,EAAmB;AACtC;;;;;;;;ACFA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACNA,eAAe,mBAAO,CAAC,GAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,eAAe,mBAAO,CAAC,EAAoB;AAC3C,gBAAgB,mBAAO,CAAC,EAAqB;AAC7C,eAAe,mBAAO,CAAC,GAAoB;;AAE3C;AACA;;AAEA;AACA,gBAAgB,mBAAO,CAAC,GAAY;AACpC;AACA,iBAAiB,mBAAO,CAAC,GAAa;AACtC;AACA,sBAAsB,mBAAO,CAAC,EAAkB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACNA,eAAe,mBAAO,CAAC,GAAqB;;AAE5C;AACA;AACA;;;;;;;UCJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;UCrBA;UACA;UACA;UACA","file":"backend.js","sourcesContent":["module.exports = ctx => {\n  const moduleInfo = ctx.app.meta.mockUtil.parseInfoFromPackage(__dirname);\n  class Status extends ctx.app.meta.BeanModuleBase {\n\n    constructor(moduleName) {\n      super(ctx, 'status');\n      this.moduleName = moduleName || ctx.module.info.relativeName;\n    }\n\n    async get(name) {\n      const status = await ctx.db.get('aStatus', {\n        iid: ctx.instance.id,\n        module: this.moduleName,\n        name,\n      });\n      return status ? JSON.parse(status.value) : undefined;\n    }\n\n    async set(name, value) {\n      await this._set({ name, value, queue: true });\n    }\n\n    async _set({ name, value, queue }) {\n      const status = await ctx.db.get('aStatus', {\n        iid: ctx.instance.id,\n        module: this.moduleName,\n        name,\n      });\n      if (status) {\n        await ctx.db.update('aStatus', {\n          id: status.id,\n          value: JSON.stringify(value),\n        });\n      } else {\n        if (queue) {\n          await ctx.app.meta.util.lock({\n            subdomain: ctx.subdomain,\n            resource: `${moduleInfo.relativeName}.statusSet.${this.moduleName}.${name}`,\n            fn: async () => {\n              return await ctx.app.meta.util.executeBean({\n                subdomain: ctx.subdomain,\n                beanModule: moduleInfo.relativeName,\n                fn: async ({ ctx }) => {\n                  return await ctx.bean.status.module(this.moduleName)._set({ name, value, queue: false });\n                },\n              });\n            },\n          });\n        } else {\n          await ctx.db.insert('aStatus', {\n            iid: ctx.instance.id,\n            module: this.moduleName,\n            name,\n            value: JSON.stringify(value),\n          });\n        }\n      }\n    }\n\n  }\n\n  return Status;\n};\n","module.exports = app => {\n\n  class Version extends app.meta.BeanBase {\n\n    async update(options) {\n      if (options.version === 1) {\n        // create table: aStatus\n        const sql = `\n          CREATE TABLE aStatus (\n            id int(11) NOT NULL AUTO_INCREMENT,\n            createdAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updatedAt timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n            deleted int(11) DEFAULT '0',\n            iid int(11) DEFAULT '0',\n            module varchar(255) DEFAULT NULL,\n            name varchar(255) DEFAULT NULL,\n            value json DEFAULT NULL,\n            PRIMARY KEY (id)\n          )\n        `;\n        await this.ctx.model.query(sql);\n      }\n    }\n\n  }\n\n  return Version;\n};\n","const versionManager = require('./bean/version.manager.js');\nconst beanStatus = require('./bean/bean.status.js');\n\nmodule.exports = app => {\n  const beans = {\n    // version\n    'version.manager': {\n      mode: 'app',\n      bean: versionManager,\n    },\n    // global\n    status: {\n      mode: 'ctx',\n      bean: beanStatus,\n      global: true,\n    },\n  };\n  return beans;\n};\n","// eslint-disable-next-line\nmodule.exports = appInfo => {\n  const config = {};\n  return config;\n};\n","// error code should start from 1001\nmodule.exports = {\n};\n","module.exports = {\n};\n","module.exports = {\n  'zh-cn': require('./locale/zh-cn.js'),\n};\n","module.exports = app => {\n\n  class StatusController extends app.Controller {\n  }\n\n  return StatusController;\n};\n","const status = require('./controller/status.js');\n\nmodule.exports = app => {\n  const controllers = {\n    status,\n  };\n  return controllers;\n};\n","const services = require('./services.js');\nconst config = require('./config/config.js');\nconst locales = require('./config/locales.js');\nconst errors = require('./config/errors.js');\n\n// eslint-disable-next-line\nmodule.exports = app => {\n\n  // beans\n  const beans = require('./beans.js')(app);\n  // routes\n  const routes = require('./routes.js')(app);\n  // controllers\n  const controllers = require('./controllers.js')(app);\n\n  return {\n    beans,\n    routes,\n    controllers,\n    services,\n    config,\n    locales,\n    errors,\n  };\n\n};\n","module.exports = app => {\n  const routes = [\n  ];\n  return routes;\n};\n","module.exports = app => {\n\n  class Status extends app.Service {\n  }\n\n  return Status;\n};\n","const status = require('./service/status.js');\n\nmodule.exports = {\n  status,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(421);\n"],"sourceRoot":""}