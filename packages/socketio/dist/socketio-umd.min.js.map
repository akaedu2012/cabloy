{"version":3,"file":"socketio-umd.min.js","mappings":"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","sources":["webpack://socketio/webpack/universalModuleDefinition","webpack://socketio/../../node_modules/@zhennann/debounce/dist/index.js","webpack://socketio/webpack/bootstrap","webpack://socketio/webpack/runtime/compat get default export","webpack://socketio/webpack/runtime/define property getters","webpack://socketio/webpack/runtime/hasOwnProperty shorthand","webpack://socketio/webpack/runtime/make namespace object","webpack://socketio/./src/io/io_main.js","webpack://socketio/./src/io/io_socket.js","webpack://socketio/./src/io/io_message.js","webpack://socketio/./src/io/io_messageSystem.js","webpack://socketio/./src/io/io_performAction.js","webpack://socketio/./src/io/io_test.js","webpack://socketio/./src/simple/index.js","webpack://socketio/./src/progress/index.js","webpack://socketio/./src/main.js","webpack://socketio/./src/io/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"socketio\"] = factory();\n\telse\n\t\troot[\"socketio\"] = factory();\n})(self, () => {\nreturn ","/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The require scope\n/******/ \tvar __webpack_require__ = {};\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ debounce)\n/* harmony export */ });\nfunction debounce(func, wait) {\n  var i = 0;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var ctx = this;\n    if (i !== 0) clearTimeout(i);\n    i = setTimeout(function () {\n      func.apply(ctx, args);\n    }, wait);\n  };\n}\nmodule.exports = __webpack_exports__;\n/******/ })()\n;\n//# sourceMappingURL=index.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default adapter => {\n  const io = {\n    //\n    _onConnectCallbacks: [],\n    _onDisconnectCallbacks: [],\n    _onSocketCreateCallbacks: [],\n    _onSocketDestroyCallbacks: [],\n    _onResetCallbacks: [],\n    //\n    _logout() {\n      // timeout: not use window.\n      setTimeout(() => {\n        this.disconnect();\n        if (adapter.logout) {\n          adapter.logout();\n        }\n      }, 0);\n    },\n    reset() {\n      this.raiseOnReset();\n    },\n    //\n    registerOnConnect(callback) {\n      this._onConnectCallbacks.push(callback);\n    },\n    raiseOnConnect() {\n      for (const callback of this._onConnectCallbacks) {\n        callback.call(this);\n      }\n    },\n    registerOnDisconnect(callback) {\n      this._onDisconnectCallbacks.push(callback);\n    },\n    raiseOnDisconnect() {\n      for (const callback of this._onDisconnectCallbacks) {\n        callback.call(this);\n      }\n    },\n    registerOnSocketCreate(callback) {\n      this._onSocketCreateCallbacks.push(callback);\n    },\n    raiseOnSocketCreate(socket) {\n      for (const callback of this._onSocketCreateCallbacks) {\n        callback.call(this, socket);\n      }\n    },\n    registerOnSocketDestroy(callback) {\n      this._onSocketDestroyCallbacks.push(callback);\n    },\n    raiseOnSocketDestroy(socket) {\n      for (const callback of this._onSocketDestroyCallbacks) {\n        callback.call(this, socket);\n      }\n    },\n    registerOnReset(callback) {\n      this._onResetCallbacks.push(callback);\n    },\n    raiseOnReset() {\n      for (const callback of this._onResetCallbacks) {\n        callback.call(this);\n      }\n    },\n  };\n  return io;\n};\n","export default adapter => {\n  const io = {\n    // socket\n    _socket: null,\n    //\n    connect() {\n      if (this._socket) {\n        this._socket.connect();\n      }\n    },\n    disconnect() {\n      if (this._socket) {\n        this._socket.disconnect();\n      }\n    },\n    _onConnect() {\n      this.raiseOnConnect();\n    },\n    _onDisconnect(reason) {\n      this.raiseOnDisconnect();\n      // reconnect\n      if (reason === 'io server disconnect' || reason === 'transport close') {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        this.connect();\n      }\n    },\n    _getSocket() {\n      if (!this._socket) {\n        this._socket = adapter.socket();\n        this.raiseOnSocketCreate(this._socket);\n      }\n      return this._socket;\n    },\n    _initialize() {\n      this._onConnectBind = this._onConnect.bind(this);\n      this._onDisconnectBind = this._onDisconnect.bind(this);\n      this.registerOnSocketCreate(socket => {\n        socket.on('connect', this._onConnectBind);\n        socket.on('disconnect', this._onDisconnectBind);\n      });\n      this.registerOnSocketDestroy(socket => {\n        socket.off('connect', this._onConnectBind);\n        socket.off('disconnect', this._onDisconnectBind);\n      });\n    },\n  };\n  return io;\n};\n","export default () => {\n  const io = {\n    // subscribes\n    _subscribeCounter: 0,\n    _subscribesAll: {},\n    _subscribesPath: {},\n    // methods\n    subscribe(path, cbMessage, cbSubscribed, options) {\n      // socket\n      const _socket = this._getSocket();\n      if (!_socket.connected) {\n        _socket.connect();\n      }\n      // record to All\n      const subscribeId = ++this._subscribeCounter;\n      this._subscribesAll[subscribeId] = {\n        path,\n        cbMessage,\n        cbSubscribed,\n        options,\n      };\n      // record to path\n      let _itemPath = this._subscribesPath[path];\n      let _newPathSubscribe = false;\n      if (!_itemPath) {\n        _itemPath = this._subscribesPath[path] = {\n          subscribed: false,\n          timestamp: Date.now(),\n          items: {},\n        };\n        _newPathSubscribe = true;\n      }\n      _itemPath.items[subscribeId] = true;\n      // just return subscribeId when disconnected\n      if (!_socket.connected) return subscribeId;\n      // connected\n      if (_newPathSubscribe) {\n        this._doSubscribePath(path);\n      } else {\n        if (_itemPath.subscribed) {\n          // invoke cbSubscribed directly\n          if (cbSubscribed) {\n            setTimeout(() => {\n              cbSubscribed({ subscribeId, path, options });\n            }, 0);\n          }\n        }\n      }\n      // ok\n      return subscribeId;\n    },\n    unsubscribe(subscribeId) {\n      const _item = this._subscribesAll[subscribeId];\n      if (!_item) return;\n\n      let _newPathUnsubscribe = false;\n      const _itemPath = this._subscribesPath[_item.path];\n      if (_itemPath) {\n        delete _itemPath.items[subscribeId];\n        if (Object.keys(_itemPath.items).length === 0) {\n          delete this._subscribesPath[_item.path];\n          _newPathUnsubscribe = true;\n        }\n      }\n\n      delete this._subscribesAll[subscribeId];\n      if (Object.keys(this._subscribesAll).length === 0) {\n        this.disconnect();\n        return; // just return because will be disconnected\n      }\n\n      // just return when disconnected\n      const _socket = this._getSocket();\n      if (!_socket.connected) return;\n\n      if (_newPathUnsubscribe) {\n        // force unsubscribe no matter whether _itemPath.subscribed\n        this._doUnsubscribePath(_item.path);\n      }\n    },\n    _onMessage(data) {\n      const _itemPath = this._subscribesPath[data.path];\n      if (!_itemPath) return;\n      for (const subscribeId in _itemPath.items) {\n        const _subscribe = this._subscribesAll[subscribeId];\n        if (_subscribe && _subscribe.cbMessage) {\n          _subscribe.cbMessage({\n            message: data.message,\n            subscribeId,\n            path: data.path,\n            options: _subscribe.options,\n          });\n        }\n      }\n    },\n    _doSubscribePath(path) {\n      // check\n      const _socket = this._getSocket();\n      if (!_socket.connected) return;\n      const _itemPath = this._subscribesPath[path];\n      if (!_itemPath) return;\n      // subscribe\n      this.performAction({\n        url: '/a/socketio/subscribe',\n        body: {\n          path,\n          timestamp: _itemPath.timestamp,\n        },\n      })\n        .then(() => {\n          _itemPath.subscribed = true;\n          for (const subscribeId in _itemPath.items) {\n            const _subscribe = this._subscribesAll[subscribeId];\n            if (_subscribe && _subscribe.cbSubscribed) {\n              _subscribe.cbSubscribed({ subscribeId, path, options: _subscribe.options });\n            }\n          }\n        })\n        .catch(() => {\n          // do nothing\n          // not check 401\n        });\n    },\n    _doUnsubscribePath(path) {\n      // check\n      const _socket = this._getSocket();\n      if (!_socket.connected) return;\n      const _itemPath = this._subscribesPath[path];\n      if (!_itemPath) return;\n      // subscribe\n      this.performAction({\n        url: '/a/socketio/unsubscribe',\n        body: {\n          path,\n          timestamp: Date.now(),\n        },\n      })\n        .then(() => {\n          _itemPath.subscribed = false;\n        })\n        .catch(() => {\n          // do nothing\n          // not check 401\n        });\n    },\n    _initialize() {\n      // OnConnect\n      this.registerOnConnect(() => {\n        // subscribe again\n        for (const path in this._subscribesPath) {\n          this._doSubscribePath(path);\n        }\n      });\n      // onDisconnect\n      this.registerOnDisconnect(() => {\n        // reset all paths\n        for (const path in this._subscribesPath) {\n          const _itemPath = this._subscribesPath[path];\n          _itemPath.subscribed = false;\n        }\n      });\n      // onReset\n      this.registerOnReset(() => {\n        this._subscribesAll = {};\n        this._subscribesPath = {};\n\n        this.disconnect();\n\n        // should clear socket\n        if (this._socket) {\n          this.raiseOnSocketDestroy(this._socket);\n          this._socket = null;\n        }\n      });\n      // message\n      this._onMessageBind = this._onMessage.bind(this);\n      this.registerOnSocketCreate(socket => {\n        socket.on('message', this._onMessageBind);\n      });\n      this.registerOnSocketDestroy(socket => {\n        socket.off('message', this._onMessageBind);\n      });\n    },\n  };\n  return io;\n};\n","export default adapter => {\n  const io = {\n    _onMessageSystem(data) {\n      if (data.code === 401) {\n        this._onMessageSystem_401(data);\n      }\n    },\n    _onMessageSystem_401(data) {\n      const type = data.type;\n      if (type === 'self' || type === 'all') {\n        this._logout();\n      } else if (type === 'provider') {\n        const user = adapter.user();\n        if (user) {\n          if (user.op.anonymous) {\n            this._logout();\n          } else {\n            const providerCurrent = user.provider;\n            const providerMessage = data.provider;\n            if (\n              providerCurrent &&\n              providerMessage &&\n              providerCurrent.scene === providerMessage.scene &&\n              providerCurrent.id === providerMessage.id\n            ) {\n              this._logout();\n            }\n          }\n        }\n      }\n    },\n    _initialize() {\n      // onMessageSystem\n      this._onMessageSystemBind = this._onMessageSystem.bind(this);\n      this.registerOnSocketCreate(socket => {\n        socket.on('message-system', this._onMessageSystemBind);\n      });\n      this.registerOnSocketDestroy(socket => {\n        socket.off('message-system', this._onMessageSystemBind);\n      });\n      // onReset\n      this.registerOnReset(() => {\n        setTimeout(() => {\n          const user = adapter.user();\n          if (user && !user.op.anonymous) {\n            this.subscribe('/a/socketio/messageSystem', ({ message }) => {\n              this._onMessageSystem(JSON.parse(message.content));\n            });\n          }\n        }, 0);\n      });\n    },\n  };\n  return io;\n};\n","export default () => {\n  const io = {\n    // performAction\n    _performActionCounter: 0,\n    _performActionPromises: {},\n    // performAction\n    async performAction({ url, body }) {\n      // socket\n      const _socket = this._getSocket();\n      if (!_socket.connected) {\n        return new Error('socket is disconnected');\n      }\n      // emit message\n      return new Promise((resolve, reject) => {\n        const id = ++this._performActionCounter;\n        this._performActionPromises[id] = { resolve, reject };\n        _socket.emit('performAction', { id, url, body });\n      });\n    },\n    _onMessagePerformActionCallback(data) {\n      const { id, result } = data;\n      const promise = this._performActionPromises[id];\n      if (!promise) return;\n      delete this._performActionPromises[id];\n      const { resolve, reject } = promise;\n      //\n      if (result.code === 0) {\n        resolve(result.data);\n      } else {\n        const error = new Error();\n        error.code = result.code;\n        error.message = result.message;\n        reject(error);\n      }\n    },\n    _clearPerformActionPromises() {\n      for (const id in this._performActionPromises) {\n        const promise = this._performActionPromises[id];\n        promise.reject(new Error('socket is disconnected'));\n      }\n      this._performActionPromises = {};\n    },\n    _initialize() {\n      this.registerOnDisconnect(() => {\n        this._clearPerformActionPromises();\n      });\n      this._onMessagePerformActionCallbackBind = this._onMessagePerformActionCallback.bind(this);\n      this.registerOnSocketCreate(socket => {\n        socket.on('performAction-callback', this._onMessagePerformActionCallbackBind);\n      });\n      this.registerOnSocketDestroy(socket => {\n        socket.off('performAction-callback', this._onMessagePerformActionCallbackBind);\n      });\n    },\n  };\n  return io;\n};\n","export default () => {\n  const io = {\n    __test: false, // true,\n    __testPerformAction(i) {\n      this.performAction({ url: '/a/socketio/test/echo', body: { echo: i } })\n        .then(data => {\n          console.log(data);\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    _initialize() {\n      this.registerOnConnect(() => {\n        if (!this.__test) return;\n        for (const i of [1, 2]) {\n          this.__testPerformAction(i);\n        }\n      });\n    },\n  };\n  return io;\n};\n","import debounce from '@zhennann/debounce';\n\nexport default (io, options) => {\n  const Simple = function () {\n    this.initialize = function () {\n      options = options || {};\n      // messageClass is optional\n      this.messageClass = (options && options.messageClass) || null;\n      // callback\n      this.onMessageOffset = options.onMessageOffset || this._onMessageOffsetDefault;\n      this.onMessageSelect = options.onMessageSelect || this._onMessageSelectDefault;\n      this.onMessagePush = options.onMessagePush;\n      this.onSubscribed = options.onSubscribed;\n      // enableMessages\n      this.enableMessages = options.enableMessages !== false;\n    };\n\n    this.subscribe = function ({ path, options }) {\n      this.messagesData = [];\n      this.messageOffset = -1;\n      this.messageOffsetPending = -1;\n      this.messageOfflineFetching = false;\n      this.messageIdsToRead = {};\n\n      this.subscribeId = io.subscribe(path, this._onMessage.bind(this), this._onSubscribed.bind(this), options);\n    };\n\n    this.unsubscribe = function () {\n      if (!this.subscribeId) return;\n      // unsubscribe\n      io.unsubscribe(this.subscribeId);\n      this.subscribeId = null;\n    };\n\n    this._onMessageOffsetDefault = async function () {\n      return await io.performAction({\n        url: '/a/socketio/message/offset',\n        body: {\n          messageClass: this.messageClass,\n        },\n      });\n    };\n\n    this._onMessageSelectDefault = async function () {\n      return await io.performAction({\n        url: '/a/socketio/message/select',\n        body: {\n          messageClass: this.messageClass,\n          options: {\n            offset: this.messageOffset,\n          },\n        },\n      });\n    };\n\n    this._onMessage = function ({ message }) {\n      this._setMessageOffset(message.id);\n      this._pushMessage(message);\n    };\n\n    this._onSubscribed = async function (...args) {\n      // custom\n      if (this.onSubscribed) {\n        const res = await this.onSubscribed(...args);\n        if (res) return res;\n      }\n      //\n      if (this.messageOfflineFetching) return;\n      this.messageOfflineFetching = true;\n      // maybe messages are sent out of order, so need re-receive offset again\n      // // offset\n      // if (this.messageOffset > -1) {\n      //   await this._offlineFetch();\n      //   return;\n      // }\n      // get offset\n      try {\n        const data = await this.onMessageOffset();\n        this.messageOffset = data.offset;\n        if (this.messageOffset === -1) {\n          this._offlineFetchStop();\n        } else {\n          await this._offlineFetch();\n        }\n      } catch (err) {\n        this._offlineFetchStop();\n      }\n    };\n\n    this._offlineFetch = async function () {\n      try {\n        const data = await this.onMessageSelect({ offset: this.messageOffset });\n        // push\n        const list = data.list;\n        if (list.length > 0) {\n          // offset\n          this.messageOffset = list[list.length - 1].id;\n          for (const message of list) {\n            this._pushMessage(message);\n          }\n        }\n        // next\n        if (data.finished) {\n          this._offlineFetchStop();\n        } else {\n          await this._offlineFetch();\n        }\n      } catch (err) {\n        this._offlineFetchStop();\n      }\n    };\n\n    this._offlineFetchStop = function () {\n      this.messageOfflineFetching = false;\n      this._setMessageOffset(this.messageOffsetPending);\n      this.messageOffsetPending = -1;\n    };\n\n    this.setMessageOffset = function (offset) {\n      return this._setMessageOffset(offset);\n    };\n\n    this._setMessageOffset = function (offset) {\n      if (this.messageOfflineFetching) {\n        if (offset > this.messageOffsetPending) this.messageOffsetPending = offset;\n        return;\n      }\n      if (offset > this.messageOffset) {\n        this.messageOffset = offset;\n      }\n    };\n\n    this.pushMessage = function (message) {\n      return this._pushMessage(message);\n    };\n\n    this._pushMessage = function (message) {\n      // insert\n      const inserted = this._insertMessage(message);\n      if (!inserted) return false;\n      // convert content\n      if (typeof message.content === 'string') {\n        message.content = JSON.parse(message.content);\n      }\n      // read\n      this._messageToRead(message);\n      // callback\n      const result = { message };\n      if (this.enableMessages) {\n        result.messages = this.messagesData;\n      }\n      this.onMessagePush(result);\n      // ok\n      return true;\n    };\n\n    this._insertMessage = function (message) {\n      if (!this.enableMessages) return true;\n      if (!message.id || message.persistence === false) {\n        this.messagesData.push(message);\n        return true;\n      }\n      let indexBase = -1;\n      for (let index = this.messagesData.length - 1; index >= 0; index--) {\n        const _message = this.messagesData[index];\n        if (!_message.id) continue;\n        if (_message.id === message.id) {\n          return false; // ignore if exists\n        }\n        if (_message.id < message.id) {\n          indexBase = index;\n          break;\n        }\n      }\n      this.messagesData.splice(indexBase + 1, 0, message);\n      return true;\n    };\n\n    this._messageToRead = function (message) {\n      if (!message.id || message.messageRead === 1 || message.persistence === false) return;\n      this.messageIdsToRead[message.id] = true;\n      this._performRead();\n    };\n\n    this._performRead = debounce(() => {\n      this._performRead2();\n    }, 300);\n\n    this._performRead2 = async function () {\n      const messageIds = Object.keys(this.messageIdsToRead);\n      this.messageIdsToRead = {};\n      try {\n        await io.performAction({\n          url: '/a/socketio/message/setRead',\n          body: {\n            messageClass: this.messageClass,\n            messageIds,\n          },\n        });\n      } catch (err) {\n        // save back\n        for (const messageId of messageIds) {\n          this.messageIdsToRead[messageId] = true;\n        }\n      }\n    };\n  };\n  const simple = new Simple();\n  simple.initialize();\n  return simple;\n};\n","import debounce from '@zhennann/debounce';\nimport simpleFn from '../simple/index.js';\n\nexport default (io, options) => {\n  const Progress = function () {\n    this.initialize = function () {\n      options = options || {};\n      this.delayTimeout = options.delayTimeout || 500;\n      this.onSubscribed = options.onSubscribed;\n      this.onProgress = options.onProgress;\n      // io simple\n      this._initializeSimple();\n    };\n    this._initializeSimple = function () {\n      const options = {};\n      options.enableMessages = false;\n      options.onSubscribed = this._onSubscribedDefault;\n      options.onMessagePush = this._onMessagePushDefault;\n      this.ioSimple = simpleFn(io, options);\n    };\n    this.subscribe = function ({ progressId, options }) {\n      this.progressId = progressId;\n      this.counter = 0;\n      this.queue = [];\n      this.queueHandler = debounce(() => {\n        for (const queueItem of this.queue) {\n          this._checking(queueItem.item);\n        }\n        this.queue = [];\n      }, this.delayTimeout);\n      //\n      const path = `/a/progress/update/${progressId}`;\n      this.ioSimple.subscribe({ path, options });\n    };\n\n    this.unsubscribe = function () {\n      this.ioSimple.unsubscribe();\n    };\n    this._queuePush = function (item) {\n      if (!item) return;\n      this.counter = item.counter;\n      const queueItem = { item, timestamp: Date.now() };\n      // push\n      const index = this.queue.findIndex(_queueItem => _queueItem.item.counter > item.counter);\n      if (index === -1) {\n        this.queue.push(queueItem);\n      } else {\n        this.queue.splice(index, 0, queueItem);\n      }\n      // check directly\n      while (this.queue[0] && this.queue[0].timestamp + 2 * this.delayTimeout < queueItem.timestamp) {\n        const queueItem = this.queue.shift();\n        this._checking(queueItem.item);\n      }\n      // queueHandler\n      this.queueHandler();\n    };\n    this._checking = function (item) {\n      // data\n      const data = item.data ? (typeof item.data === 'string' ? JSON.parse(item.data) : item.data) : {};\n      this.onProgress({ item, data });\n    };\n    this._onSubscribedDefault = async function (...args) {\n      // custom\n      if (this.onSubscribed) {\n        const res = await this.onSubscribed(...args);\n        if (res) return res;\n      }\n      // progress check\n      const item = await io.performAction({\n        url: '/a/progress/progress/check',\n        body: {\n          progressId: this.progressId,\n          counter: this.counter,\n        },\n      });\n      this._queuePush(item);\n      // true\n      return true;\n    };\n    this._onMessagePushDefault = function ({ message }) {\n      this._queuePush(message.content);\n    };\n  };\n  const progress = new Progress();\n  progress.initialize();\n  return progress;\n};\n","import ioFn from './io/index.js';\nimport simpleFn from './simple/index.js';\nimport progressFn from './progress/index.js';\n\nexport default {\n  io: ioFn,\n  simple: simpleFn,\n  progress: progressFn,\n};\n","import io_main from './io_main.js';\nimport io_socket from './io_socket.js';\nimport io_message from './io_message.js';\nimport io_messageSystem from './io_messageSystem.js';\nimport io_performAction from './io_performAction.js';\nimport io_test from './io_test.js';\n\nexport default adapter => {\n  const io = {};\n  const _initializes = [];\n  function mixin(ioProviderFn) {\n    const ioProvider = ioProviderFn(adapter);\n    if (ioProvider._initialize) {\n      _initializes.push(ioProvider._initialize);\n    }\n    Object.assign(io, ioProvider);\n  }\n  // mixins\n  mixin(io_main);\n  mixin(io_socket);\n  mixin(io_message);\n  mixin(io_messageSystem);\n  mixin(io_performAction);\n  mixin(io_test);\n  // initialize providers\n  for (const _initialize of _initializes) {\n    _initialize.call(io);\n  }\n  // initialize adapter\n  adapter.initialize(io);\n  return io;\n};\n"],"names":["root","factory","exports","module","define","amd","self","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","__webpack_exports__","debounce","func","wait","i","_len","arguments","length","args","Array","_key","ctx","this","clearTimeout","setTimeout","apply","r","d","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","a","adapter","_onConnectCallbacks","_onDisconnectCallbacks","_onSocketCreateCallbacks","_onSocketDestroyCallbacks","_onResetCallbacks","_logout","disconnect","logout","reset","raiseOnReset","registerOnConnect","callback","push","raiseOnConnect","registerOnDisconnect","raiseOnDisconnect","registerOnSocketCreate","raiseOnSocketCreate","socket","registerOnSocketDestroy","raiseOnSocketDestroy","registerOnReset","_socket","connect","_onConnect","_onDisconnect","reason","_getSocket","_initialize","_onConnectBind","bind","_onDisconnectBind","on","off","_subscribeCounter","_subscribesAll","_subscribesPath","subscribe","path","cbMessage","cbSubscribed","options","connected","subscribeId","_itemPath","_newPathSubscribe","subscribed","timestamp","Date","now","items","_doSubscribePath","unsubscribe","_item","_newPathUnsubscribe","keys","_doUnsubscribePath","_onMessage","data","_subscribe","message","performAction","url","body","then","_onMessageBind","_onMessageSystem","code","_onMessageSystem_401","type","user","op","anonymous","providerCurrent","provider","providerMessage","scene","id","_onMessageSystemBind","JSON","parse","content","io","_performActionCounter","_performActionPromises","Error","Promise","resolve","reject","emit","_onMessagePerformActionCallback","result","promise","error","_clearPerformActionPromises","_onMessagePerformActionCallbackBind","__test","__testPerformAction","echo","console","log","err","simple","initialize","messageClass","onMessageOffset","_onMessageOffsetDefault","onMessageSelect","_onMessageSelectDefault","onMessagePush","onSubscribed","enableMessages","messagesData","messageOffset","messageOffsetPending","messageOfflineFetching","messageIdsToRead","_onSubscribed","offset","_setMessageOffset","_pushMessage","res","_offlineFetchStop","_offlineFetch","list","finished","setMessageOffset","pushMessage","_insertMessage","_messageToRead","messages","persistence","indexBase","index","_message","splice","messageRead","_performRead","_performRead2","messageIds","messageId","_initializes","mixin","ioProviderFn","ioProvider","assign","io_main","io_socket","io_message","io_messageSystem","io_performAction","io_test","simpleFn","progress","delayTimeout","onProgress","_initializeSimple","_onSubscribedDefault","_onMessagePushDefault","ioSimple","progressId","counter","queue","queueHandler","queueItem","_checking","item","_queuePush","findIndex","_queueItem","shift"],"sourceRoot":""}