{"version":3,"file":"socketio.min.js","mappings":"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","sources":["webpack://@zhennann/socketio/webpack/bootstrap","webpack://@zhennann/socketio/webpack/runtime/define property getters","webpack://@zhennann/socketio/webpack/runtime/hasOwnProperty shorthand","webpack://@zhennann/socketio/webpack/runtime/make namespace object","webpack://@zhennann/socketio/./src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default adapter => {\n  const io = {\n    // socket\n    _socket: null,\n    // subscribes\n    _subscribeCounter: 0,\n    _subscribesAll: {},\n    _subscribesPath: {},\n    // subscribes waiting\n    _subscribesWaitingTimeoutId: 0,\n    _subscribesWaitingDoing: false,\n    _subscribesWaiting: {},\n    // unsubscribes waiting\n    _unsubscribesWaitingTimeoutId: 0,\n    _unsubscribesWaitingDoing: false,\n    _unsubscribesWaiting: {},\n    // methods\n    subscribe(path, cbMessage, cbSubscribed, options) {\n      // options\n      options = options || {};\n      // socket\n      const _socket = this._getSocket();\n      if (!_socket.connected) {\n        _socket.connect();\n      }\n      // record to All\n      const subscribeId = ++this._subscribeCounter;\n      this._subscribesAll[subscribeId] = {\n        path,\n        cbMessage,\n        cbSubscribed,\n        options,\n      };\n      // record to path\n      let _itemPath = this._subscribesPath[path];\n      let _newPathSubscribe = false;\n      if (!_itemPath) {\n        _itemPath = this._subscribesPath[path] = { scene: options.scene, items: {} };\n        _newPathSubscribe = true;\n        // delete waiting\n        delete this._unsubscribesWaiting[path];\n      }\n      _itemPath.items[subscribeId] = true;\n\n      // check waitings\n      if (_socket.connected) {\n        if (_newPathSubscribe) {\n          this._subscribesWaiting[path] = true;\n          this._doSubscribesWaiting();\n        } else {\n          if (!this._subscribesWaiting[path]) {\n            // invoke cbSubscribed directly\n            if (cbSubscribed) {\n              cbSubscribed();\n            }\n          }\n        }\n      }\n\n      // ok\n      return subscribeId;\n    },\n    unsubscribe(subscribeId) {\n      const _item = this._subscribesAll[subscribeId];\n      if (!_item) return;\n\n      const _itemPath = this._subscribesPath[_item.path];\n      if (_itemPath) {\n        delete _itemPath.items[subscribeId];\n        if (Object.keys(_itemPath.items).length === 0) {\n          // delete path\n          delete this._subscribesPath[_item.path];\n          // delete waiting\n          delete this._subscribesWaiting[_item.path];\n          // unsubscribe\n          if (_itemPath.socketId) {\n            this._unsubscribesWaiting[_item.path] = { scene: _itemPath.scene, socketId: _itemPath.socketId };\n            this._doUnsubscribesWaiting();\n          }\n        }\n      }\n\n      delete this._subscribesAll[subscribeId];\n\n      if (Object.keys(this._subscribesAll).length === 0) {\n        this.disconnect();\n      }\n    },\n    _doSubscribesWaiting() {\n      if (this._subscribesWaitingDoing) return;\n      if (this._subscribesWaitingTimeoutId !== 0) return;\n      if (Object.keys(this._subscribesWaiting).length === 0) return;\n      if (!this._socket.connected) return;\n      // combine\n      const subscribes = [];\n      for (const path in this._subscribesWaiting) {\n        const _itemPath = this._subscribesPath[path];\n        if (_itemPath) {\n          subscribes.push({ path, scene: _itemPath.scene });\n        }\n      }\n      // subscribe\n      this._subscribesWaitingDoing = true;\n      adapter\n        .subscribe({ subscribes, socketId: this._socket.id })\n        .then(() => {\n          // loop\n          for (const _item of subscribes) {\n            // delete waiting\n            delete this._subscribesWaiting[_item.path];\n            // cbSubscribed\n            const _itemPath = this._subscribesPath[_item.path];\n            if (_itemPath) {\n              _itemPath.socketId = this._socket.id;\n              for (const subscribeId in _itemPath.items) {\n                const _subscribe = this._subscribesAll[subscribeId];\n                if (_subscribe && _subscribe.cbSubscribed) {\n                  _subscribe.cbSubscribed();\n                }\n              }\n            }\n          }\n          // done\n          this._subscribesWaitingDoing = false;\n          // next\n          this._doSubscribesWaiting();\n        })\n        .catch(err => {\n          // done\n          this._subscribesWaitingDoing = false;\n          if (err.code === 401) {\n            this._logout();\n          } else {\n            // timeout\n            this._subscribesWaitingTimeoutId = window.setTimeout(() => {\n              this._subscribesWaitingTimeoutId = 0;\n              this._doSubscribesWaiting();\n            }, 2000);\n          }\n        });\n    },\n    _doUnsubscribesWaiting() {\n      if (this._unsubscribesWaitingDoing) return;\n      if (this._unsubscribesWaitingTimeoutId !== 0) return;\n      if (Object.keys(this._unsubscribesWaiting).length === 0) return;\n      // combine\n      const subscribes = [];\n      for (const path in this._unsubscribesWaiting) {\n        const _itemPath = this._subscribesPath[path];\n        if (_itemPath) {\n          // delete waiting\n          delete this._unsubscribesWaiting[path];\n        } else {\n          const _item = this._unsubscribesWaiting[path];\n          subscribes.push({ path, scene: _item.scene, socketId: _item.socketId });\n        }\n      }\n      // unsubscribe\n      this._unsubscribesWaitingDoing = true;\n      adapter\n        .unsubscribe({ subscribes })\n        .then(() => {\n          // loop\n          for (const _item of subscribes) {\n            // delete waiting\n            delete this._unsubscribesWaiting[_item.path];\n          }\n          // done\n          this._unsubscribesWaitingDoing = false;\n          // next\n          this._doUnsubscribesWaiting();\n        })\n        .catch(err => {\n          // done\n          this._unsubscribesWaitingDoing = false;\n          if (err.code === 401) {\n            this._logout();\n          } else {\n            // timeout\n            this._unsubscribesWaitingTimeoutId = window.setTimeout(() => {\n              this._unsubscribesWaitingTimeoutId = 0;\n              this._doUnsubscribesWaiting();\n            }, 2000);\n          }\n        });\n    },\n    _getSocket() {\n      if (!this._socket) {\n        this._socket = adapter.socket();\n        this._socket.on('connect', this._onConnectBind);\n        this._socket.on('disconnect', this._onDisconnectBind);\n        this._socket.on('message', this._onMessageBind);\n        this._socket.on('message-system', this._onMessageSystemBind);\n      }\n      return this._socket;\n    },\n    _logout() {\n      window.setTimeout(() => {\n        this.disconnect();\n        if (adapter.logout) {\n          adapter.logout();\n        }\n      }, 0);\n    },\n    _onMessage(data) {\n      const _itemPath = this._subscribesPath[data.path];\n      if (!_itemPath) return;\n      for (const subscribeId in _itemPath.items) {\n        const _subscribe = this._subscribesAll[subscribeId];\n        if (_subscribe && _subscribe.cbMessage) {\n          _subscribe.cbMessage({ message: data.message });\n        }\n      }\n    },\n    _onMessageSystem(data) {\n      if (data.code === 401) {\n        this._onMessageSystem_401(data);\n      }\n    },\n    _onMessageSystem_401(data) {\n      const type = data.type;\n      if (type === 'self' || type === 'all') {\n        this._logout();\n      } else if (type === 'provider') {\n        const user = adapter.user();\n        if (user) {\n          if (user.op.anonymous) {\n            this._logout();\n          } else {\n            const providerCurrent = user.provider;\n            const providerMessage = data.provider;\n            if (providerCurrent.scene === providerMessage.scene && providerCurrent.id === providerMessage.id) {\n              this._logout();\n            }\n          }\n        }\n      }\n    },\n    _onConnect() {\n      this._subscribesWaiting = {};\n      if (Object.keys(this._subscribesPath).length === 0) {\n        this.disconnect();\n      } else {\n        // -> waitings\n        for (const path in this._subscribesPath) {\n          this._subscribesWaiting[path] = true;\n        }\n        this._doSubscribesWaiting();\n      }\n    },\n    _onDisconnect(reason) {\n      this._subscribesWaiting = {};\n      // reconnect\n      if (reason === 'io server disconnect' || reason === 'transport close') {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        this.connect();\n      }\n    },\n    connect() {\n      if (this._socket) {\n        this._socket.connect();\n      }\n    },\n    disconnect() {\n      if (this._socket) {\n        this._socket.disconnect();\n      }\n    },\n    reset() {\n      this._unsubscribesWaiting = {};\n      this._unsubscribesWaitingTimeoutId = 0;\n      this._unsubscribesWaitingDoing = false;\n\n      this._subscribesWaiting = {};\n      this._subscribesWaitingTimeoutId = 0;\n      this._subscribesWaitingDoing = false;\n\n      this._subscribesAll = {};\n      this._subscribesPath = {};\n\n      this.disconnect();\n\n      // should clear socket\n      if (this._socket) {\n        this._socket.off('connect', this._onConnectBind);\n        this._socket.off('disconnect', this._onDisconnectBind);\n        this._socket.off('message', this._onMessageBind);\n        this._socket.off('message-system', this._onMessageSystemBind);\n        this._socket = null;\n      }\n\n      const user = adapter.user();\n      if (user && !user.op.anonymous) {\n        this.subscribe('/a/socketio/messageSystem', ({ message }) => {\n          this._onMessageSystem(JSON.parse(message.content));\n        });\n      }\n    },\n  };\n  // bind\n  io._onConnectBind = io._onConnect.bind(io);\n  io._onDisconnectBind = io._onDisconnect.bind(io);\n  io._onMessageBind = io._onMessage.bind(io);\n  io._onMessageSystemBind = io._onMessageSystem.bind(io);\n  // initialize\n  adapter.initialize(io);\n  return io;\n};\n"],"names":["adapter","io","_socket","_subscribeCounter","_subscribesAll","_subscribesPath","_subscribesWaitingTimeoutId","_subscribesWaitingDoing","_subscribesWaiting","_unsubscribesWaitingTimeoutId","_unsubscribesWaitingDoing","_unsubscribesWaiting","subscribe","path","cbMessage","cbSubscribed","options","_getSocket","connected","connect","subscribeId","_itemPath","_newPathSubscribe","scene","items","_doSubscribesWaiting","unsubscribe","_item","Object","keys","length","socketId","_doUnsubscribesWaiting","disconnect","subscribes","push","id","then","_subscribe","err","code","_logout","window","setTimeout","socket","on","_onConnectBind","_onDisconnectBind","_onMessageBind","_onMessageSystemBind","logout","_onMessage","data","message","_onMessageSystem","_onMessageSystem_401","type","user","op","anonymous","providerCurrent","provider","providerMessage","_onConnect","_onDisconnect","reason","reset","off","JSON","parse","content","bind","initialize"],"sourceRoot":""}